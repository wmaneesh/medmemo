{"version":3,"sources":["Components/Modal/ResetPasswordModal.js","Components/Modal/SubmitDone.js","Components/Login/Login.js","Components/firebase/firebase.js","Components/Nurse/notify/NurseMsgTile.js","Components/Nurse/notify/NurseMsgList.js","Components/NavBar/NavBar.js","Components/Nurse/PatientTable.js","Components/Nurse/Header.js","Components/Sbar/useForm.js","Components/Sbar/Background.js","Components/Sbar/Situation.js","Components/Sbar/Assessment.js","Components/Sbar/Recommendation.js","Components/Sbar/Sbarform.js","Components/Sbar/Sbar.js","Components/Nurse/ContactPhysicianCard.js","Components/Nurse/HistoryTable.js","Components/Nurse/notify/DialogBox.js","Components/Sbar/ViewSbar/UseFormView.js","Components/Sbar/ViewSbar/Background.js","Components/Sbar/ViewSbar/Situation.js","Components/Sbar/ViewSbar/Assessment.js","Components/Sbar/ViewSbar/Recommendation.js","Components/Sbar/ViewSbar/ViewSbarForm.js","Components/Sbar/ViewSbar/ViewSbar.js","Components/Nurse/NursePage.js","Components/Routes/ProtectedRoute.js","Components/Routes/ProtectedLogin.js","Components/Physician/PatientTableTemplate.js","Components/Physician/PhysicianPatientList.js","Components/Physician/notification/MessageTile.js","Components/Physician/notification/InboxList.js","Components/Physician/notification/PhysicianNavbar.js","Components/Physician/physicianHistoryTable.js","Components/Physician/PhysicianDashboard.js","Components/Admin/DashboardButton.js","Components/createNewUser/GeneralCreatePage.js","Components/createNewUser/CreateNurse.js","Components/createNewUser/CreatePhysician.js","Components/createNewUser/CreatePatient.js","Components/createNewUser/UnlockAccount.js","Components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["inputStyles","makeStyles","theme","root","margin","spacing","width","buttonStyles","ResetPasswordModal","props","inputClass","buttonClass","onClose","selectedValue","open","useState","token","setToken","newPassword","setNewPassword","errorStatus","setErrorStatus","errorText","setErrorText","handleClose","handleReset","event","console","log","fetch","method","headers","body","JSON","stringify","then","res","ok","json","result","Dialog","aria-labelledby","className","DialogTitle","id","InputLabel","TextField","label","variant","onChange","target","value","onBlur","error","helperText","Button","color","onClick","onKeyPress","which","SubmitDone","hanldeReturnToHome","returnKey","status","style","textAlign","fullWidth","maxWidth","statusMessage","to","Login","password","setPassword","setOpen","setStatusMessage","handleLogin","credentials","undefined","user_type","setAccountType","setAuthenticate","setUserToken","htmlFor","type","placeholder","e","icon","faUserMd","faUnlockAlt","cursor","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","MessageFile","fadeIn","setFadeIn","db","firestore","isAck","setIsAck","useEffect","a","ref","collection","doc","keyval","get","b","g","pID","Fade","in","padding","MenuItem","fontWeight","backgroundColor","date","patient_name","Collapse","physician_name","text","fontSize","Transform","setTimeout","delete","useStyles","display","paper","marginRight","NurseMsgList","classes","React","anchorRef","useRef","current","contains","handleListKeyDown","key","preventDefault","prevOpen","focus","aria-controls","aria-haspopup","textTransform","inbox","length","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","map","details","index","NurseMsgTile","nurse_name","date_submitted","readFlag","read","physicianID","NavBar","nurseInbox","setNurseInbox","history","useHistory","temp","item","nurseId","where","onSnapshot","querySnapshot","forEach","data","push","href","faClinicMedical","search","setSearch","faTimes","faSearch","justifyContent","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","EnhancedTableHead","onRequestSort","TableHead","TableRow","TableCell","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","paddingTop","highlight","palette","primary","main","lighten","secondary","dark","title","flex","EnhancedTableToolbar","numSelected","name","Toolbar","clsx","Typography","component","Tooltip","IconButton","aria-label","marginBottom","table","minWidth","tableLayout","border","clip","height","overflow","position","top","EnhancedTable","setOrder","setOrderBy","selected","setSelected","patientName","setPatientName","patientId","setPatientId","patientRoom","setPatientRoom","page","rowsPerPage","s_problem","patient_room_id","r_priority","update_status","last_updated","SBAR_history","update","searchState","setSearchState","note_patient_id","date_created","patients","setPatients","searchedPatients","filter","patient","toLowerCase","startsWith","handleClick","room_id","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","min","marginTop","flexDirection","alignItems","heigh","elevation","TableContainer","Table","size","onSelectAllClick","checked","newSelecteds","n","rowCount","TableBody","labelId","hover","tabIndex","scope","pathname","roomId","colSpan","Header","defaultProps","verticleAlighn","whiteSpace","createMuiTheme","red","Form","other","children","ThemeProvider","autoComplete","Grid12","Grid","xs","TextFieldSingle","defaultValue","Inputgroup","Checkbox","FormControl","FormControlLabel","control","convertToEventFromCheckbox","ButtonForm","buttonstyles","paperStyle","pageContent","marginLeft","Background","paperstyle","container","md","background","b_awareness_alert_oriented","handleInput","b_awareness_confused_cooperative","b_awareness_non_coop_agit_combative","b_awareness_stuporous","b_awareness_comatose","b_skin_warm_dry","b_skin_pale","b_skin_mottled","b_skin_diaphoretic","b_skin_extremities_cold","b_skin_extremities_warm","s_o2","b_o2_time","b_oximeter_detection","Situation","nurseName","situation","s_code_status","errors","lg","xl","s_BP","s_pulse","s_respiration","s_temperature","s_concern_bp","s_concern_pulse","s_concern_respiration","s_concern_temperature","s_concern_o2","Assessment","containe","justify","assessment","a_problem","a_problem_cardiac","a_problem_infection","a_problem_neurologic","a_problem_respitory","a_problem_unsure_deterioriating","a_unstable","a_arrest","Recommendation","recommendation","r_request","r_patient_family_code_status","r_test_needed","r_freq_vital_signs","r_time_problem_will_last","r_problem_persist_contact","note_id","note_nurse_id","note_room_id","b_awareness_lethargic","b_o2_percent","Sbarform","setStatus","handleClickOpen","validate","fieldValues","situationValue","setErrors","Object","values","every","x","setSituationValue","backgroundValue","setBackgroundValue","assessmentValue","setAssessmentValue","recValue","setRecValue","charAt","useForm","combinedValues","creatNewSbarNote","useCallback","parseInt","onSubmit","Sbar","param","useParams","ContactPhysicanCard","physName","setPhysName","physician_id","setPhysicianId","specialty","setSpecialty","availability","expanded","setExpanded","remarks","setRemarks","dbf","physician_specialty","handleExpandClick","src","d","Date","nurse_id","patient_id","toLocaleString","ack","timestamp","FieldValue","serverTimestamp","add","onDialogSubmitChange","onReset","multiline","rows","maxHeight","minHeight","sbar_note_archive_patient_id","sbar_note_archive_date_created","sbar_note_archive_room_id","sbar_note_archive_patient_name","dateCreated","DialogTest","openDiag","handleChange","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","disabled","defaultdefaultValue","ViewSbarForm","loadingSbarStatus","setLoadingSbarStatus","prevSituationValue","prevBackgroundValue","prevAssessmentValue","prevRecValue","entries","CircularProgress","left","ViewSbar","NursePage","setNurseId","setNurseName","showDialog","setShowDialog","handleDialogChange","userToken","exact","path","location","ProtectedRouteNurse","authenticate","accountType","Component","rest","render","state","from","ProtectedLogin","PhysicianPatientList","this","markAcknowledge","set","Color","InboxList","MessageTile","PhysicianNavBar","setInbox","snapshot","childSnapshot","listStyle","PhysicianDashBoard","physicianId","setPhysicianName","library","faStethoscope","faUserNurse","faUserInjured","faChild","DashboardButton","setColor","iconUsed","setIconUsed","bgColors","textDecoration","count","GeneralCreatePage","useField","field","meta","touched","formSchema","yup","shape","required","verifyPassword","when","is","val","oneOf","fname","matches","lname","department","CreatePatient","setState","handleSubmit","bind","initialValues","validationSchema","admissionDate","dateOfBirth","weight","affectedRows","UnlockAccounts","light","Admin","CreateNurse","CreatePhysician","UnlockAccount","App","user","themes","ProtectedRoute","Physician","Boolean","window","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6a51dbd2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst inputStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ResetPasswordModal(props) {\r\n  const inputClass = inputStyles();\r\n  const buttonClass = buttonStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const [token, setToken] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [errorStatus, setErrorStatus] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleToken = (event) => {\r\n    setToken(event.target.value);\r\n  };\r\n\r\n  const handlePassword = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const returnKey = (event) => {\r\n    if (event.which === 13) {\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  const handleTokenCheck = (event) => {\r\n    fetch(`https://server.wmaneesh.com/login/tokenExists/${event.target.value}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== \"User exist\") {\r\n          setErrorStatus(true);\r\n          setErrorText(result);\r\n        } else {\r\n          setErrorStatus(false);\r\n          setErrorText(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    console.log(token, newPassword);\r\n    fetch(`https://server.wmaneesh.com/login/resetPassword`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: token,\r\n        newPassword: newPassword,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <form className=\"resetPassword-form\">\r\n        <DialogTitle id=\"simple-dialog-title\">Reset Password</DialogTitle>\r\n        <InputLabel>Please type in your token and new password</InputLabel>\r\n        <div className={`resetPassword-inputFields ${inputClass.root}`}>\r\n          <TextField\r\n            className=\"token\"\r\n            id=\"outlined-basic\"\r\n            label=\"Token\"\r\n            variant=\"outlined\"\r\n            onChange={handleToken}\r\n            onBlur={handleTokenCheck}\r\n            error={errorStatus}\r\n            helperText={errorText}\r\n          />\r\n          <TextField\r\n            className=\"newPassword\"\r\n            id=\"outlined-basic\"\r\n            label=\"New Password\"\r\n            variant=\"outlined\"\r\n            onChange={handlePassword}\r\n          />\r\n        </div>\r\n        <div className={`resetPassword-buttons ${buttonClass.root}`}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            label=\"Submit\"\r\n            onClick={handleReset}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            label=\"close\"\r\n            onClick={handleClose}\r\n            onKeyPress={returnKey}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n// Modal.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n// };\r\n\r\nexport default ResetPasswordModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InputLabel,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SubmitDone(props) {\r\n  const buttonClass = buttonStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  console.log(props);\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const hanldeReturnToHome = (event) => {};\r\n\r\n  const returnKey = (event) => {\r\n    if (event.which === 13) {\r\n      if (props.status) {\r\n        hanldeReturnToHome();\r\n      } else {\r\n        handleClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modalContainer\">\r\n      <Dialog\r\n        style={{ textAlign: \"center\" }}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        open={open}\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle id=\"simple-dialog-title\">Submission Status</DialogTitle>\r\n        <InputLabel>{props.statusMessage}</InputLabel>\r\n\r\n        <div\r\n          className={`submitDone-buttons ${buttonClass.root}`}\r\n          style={{ margin: \"1rem\" }}\r\n        >\r\n          {props.status ? (\r\n            <Link to={\"/medmemo/\"}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                label=\"Submit\"\r\n                onClick={hanldeReturnToHome}\r\n                onKeyPress={returnKey}\r\n              >\r\n                Return To Home Page\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              label=\"close\"\r\n              onClick={handleClose}\r\n              onKeyPress={returnKey}\r\n            >\r\n              Retry\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Modal.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n// };\r\n\r\nexport default SubmitDone;\r\n","import React, { useState } from \"react\";\r\nimport ResetPasswordModal from \"../Modal/ResetPasswordModal\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n//import icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserMd, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Login = (props) => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false); //for modal\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const returnKey = (event) => {\r\n    if (event.which === 13) {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    fetch(\"https://server.wmaneesh.com/login\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ token, password }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result.user_type === undefined) {\r\n          setStatusMessage(result);\r\n        } else {\r\n          props.setAccountType(`/medmemo/${result.user_type}`);\r\n          props.setAuthenticate(true);\r\n          props.setUserToken(token);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"login-contents\">\r\n        <div className=\"login-title-sentence\">\r\n          <div className=\"login-title\">Welcome Back</div>\r\n          <div className=\"login-sentence\">\r\n            <p className=\"sentence\">\r\n              Please use the token provided by the admin to login\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-component\">\r\n          <div className=\"login-form\">\r\n            <div className=\"login-form-group\">\r\n              <label className=\"label\" htmlFor=\"token\">\r\n                Token\r\n              </label>\r\n              <input\r\n                className=\"token login-input\"\r\n                type=\"text\"\r\n                placeholder=\"token\"\r\n                onChange={(e) => setToken({ token: e.target.value })}\r\n                onKeyPress={returnKey}\r\n              />\r\n              <FontAwesomeIcon className=\"user-icon\" icon={faUserMd} />\r\n            </div>\r\n\r\n            <div className=\"login-form-group\">\r\n              <label className=\"label\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <input\r\n                className=\"password login-input\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                onChange={(e) => setPassword({ password: e.target.value })}\r\n                onKeyPress={returnKey}\r\n              />\r\n              <FontAwesomeIcon className=\"user-icon\" icon={faUnlockAlt} />\r\n            </div>\r\n          </div>\r\n          <div className=\"login-error\" style={{ textAlign: \"center\" }}>\r\n            <label style={{ color: \"red\" }}>{statusMessage}</label>\r\n          </div>\r\n          <div />\r\n          <div className=\"login-button\">\r\n            <button className=\"button\" onClick={handleLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <label\r\n              style={{ cursor: \"pointer\", color: \"#33bbb3\" }}\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Reset Password\r\n            </label>\r\n            <ResetPasswordModal open={open} onClose={handleClose} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCf3hsES6yZFc6a8tY24ZMUHPb-iRcijPc\",\r\n  authDomain: \"eng4000-6e1fd.firebaseapp.com\",\r\n  databaseURL: \"https://eng4000-6e1fd-default-rtdb.firebaseio.com\",\r\n  projectId: \"eng4000-6e1fd\",\r\n  storageBucket: \"eng4000-6e1fd.appspot.com\",\r\n  messagingSenderId: \"627878966971\",\r\n  appId: \"1:627878966971:web:ac8b8f2bb76e09891e9b9e\",\r\n  measurementId: \"G-868SJF08XC\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig); // firebase.initializeApp gives us access to our database by passing in firebaseConfig as the argument\r\n\r\nexport default firebase;\r\n\r\n","import react, { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport SendRoundedIcon from \"@material-ui/icons/Send\";\r\n\r\nconst MessageFile = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [fadeIn, setFadeIn] = useState(true);\r\n\r\n  const db = firebase.firestore();\r\n  const [isAck, setIsAck] = useState();\r\n  let res = [];\r\n\r\n  useEffect(() => {\r\n    const g = async () => {\r\n      const ref = db.collection(`msg`).doc(props.keyval);\r\n      res = await ref.get();\r\n      const b = await res.get(\"ack\");\r\n      setIsAck(b);\r\n    };\r\n\r\n    g();\r\n  }, [props.pID, res]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const deleteMsg = () => {\r\n    setOpen(false);\r\n    setTimeout(() => {\r\n      setFadeIn(false);\r\n    }, 300);\r\n\r\n    setTimeout(() => {\r\n      const ref = db.collection(`msg`).doc(props.keyval).delete();\r\n    }, 400);\r\n  };\r\n\r\n  return (\r\n    <Fade in={fadeIn}>\r\n      <div className=\"PhysicianMessage\" style={{ padding: \"5px\" }}>\r\n        <div className=\"physicianMsgInfo\" onClick={handleClick}>\r\n          <MenuItem\r\n            className=\"PhysMsgTileMenuItem\"\r\n            style={{\r\n              fontWeight: `${isAck === true ? \"650\" : \"450\"}`,\r\n              backgroundColor: `${isAck === true ? \"#dcf2e2\" : \"#ffffff\"}`,\r\n            }}\r\n          >\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <div className=\"msgDate\">{props.date}</div>\r\n              <div className=\"msgPatName\">Patient: {props.patient_name}</div>\r\n            </div>\r\n          </MenuItem>\r\n        </div>\r\n        <Collapse\r\n          in={open}\r\n          style={{\r\n            color: \"dimgray\",\r\n          }}\r\n        >\r\n          <div className=\"physicianMsgSection\">\r\n            <div className=\"PhysicianMsgContents\">\r\n              <div className=\"msgTextHeader\">To: Dr {props.physician_name}</div>\r\n              <div className=\"NurseMsgText\">\r\n                <p>{props.text}</p>\r\n              </div>\r\n              <div className=\"NurseMsgIconSection\">\r\n                <div className=\"NurseMsgIconContainer\">\r\n                  <div className=\"NurseMsgIconText\">\r\n                    {isAck ? \"seen\" : \"delivered\"}\r\n                  </div>\r\n                  <div className=\"NurseMsgIcon\">\r\n                    {isAck ? (\r\n                      <CheckIcon\r\n                        style={{\r\n                          color: \"white\",\r\n                          fontSize: \"15\",\r\n                          Transform: \"translate(100px 0px)\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <SendRoundedIcon\r\n                        style={{ color: \"white\", fontSize: \"12\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"NurseMsgDeleteContainer\">\r\n              <button className=\"NurseMsgDeleteButton\" onClick={deleteMsg}>\r\n                <HighlightOffIcon style={{ color: \"#6e0000\" }} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default MessageFile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport NurseMsgTile from \"./NurseMsgTile\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function NurseMsgList(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <div className=\"PhysInboxButton\">\r\n          <Button\r\n            ref={anchorRef}\r\n            aria-controls={open ? \"menu-list-grow\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <div\r\n              className=\"PhysInboxLabel\"\r\n              style={{\r\n                fontSize: \"1.5rem\",\r\n                textTransform: \"lowercase\",\r\n              }}\r\n            >\r\n              Outbox\r\n            </div>\r\n            <div className=\"physInboxNumIcon\">\r\n              <div className=\"PinboxNumText\">{props.inbox.length}</div>\r\n            </div>\r\n          </Button>\r\n        </div>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <div className=\"inboxContainer\">\r\n                    <MenuList\r\n                      autoFocusItem={open}\r\n                      id=\"menu-list-grow\"\r\n                      onKeyDown={handleListKeyDown}\r\n                    >\r\n                      {props.inbox.length > 0 ? (\r\n                        props.inbox.map((details, index) => (\r\n                          <div className=\"messages\" key={index}>\r\n                            <NurseMsgTile\r\n                              keyval={details.key} // this is the firebase key for that msg\r\n                              patient_name={details.patient_name}\r\n                              physician_name={details.physician_name}\r\n                              nurse_name={details.nurse_name}\r\n                              date={details.date_submitted}\r\n                              text={details.text}\r\n                              readFlag={details.read}\r\n                              pID={props.physicianID}\r\n                            />\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <MenuItem>No Messages!</MenuItem>\r\n                      )}\r\n                    </MenuList>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n//import icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClinicMedical,\r\n  faSearch,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport NurseMsgList from \"../Nurse/notify/NurseMsgList\";\r\n\r\nconst NavBar = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [nurseInbox, setNurseInbox] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  let temp = [];\r\n  let item = [];\r\n  const db = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    if (props.nurseId !== undefined && props.nurseId !== \"\") {\r\n      const ref = db.collection(\"msg\");\r\n      const q = ref\r\n        .where(\"nurse_id\", \"==\", props.nurseId)\r\n        .onSnapshot((querySnapshot) => {\r\n          temp = [];\r\n          querySnapshot.forEach((doc) => {\r\n            item = doc.data();\r\n            item.key = doc.id;\r\n            temp.push(item);\r\n          });\r\n          setNurseInbox(temp);\r\n        });\r\n    }\r\n  }, [props.nurseId]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleSearchInput = (event) => {\r\n    props.setSearch(event.target.value);\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    props.setSearch(\"\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    fetch(\"https://server.wmaneesh.com/login/logout\", {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"logout was unsuccessfull\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        props.setAuthenticate(false);\r\n        history.push(\"/medmemo/\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <header className=\"main-navbar\">\r\n      <div className=\"navbar-contents\">\r\n        <a href=\"/medmemo\">\r\n          <FontAwesomeIcon className=\"logo fa-2x\" icon={faClinicMedical} />\r\n        </a>\r\n        <a className=\"search-icon\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search patient\"\r\n            value={props.search}\r\n            onChange={handleSearchInput}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"close\"\r\n            icon={faTimes}\r\n            onClick={handleReset}\r\n          />\r\n          <FontAwesomeIcon className=\"search\" icon={faSearch} />\r\n        </a>\r\n\r\n        <div\r\n          onClick={handleClick}\r\n          className={open ? \"hamburger-module active\" : \"hamburger-module\"}\r\n        >\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <nav className=\"navbar\">\r\n          <ul className={open ? \"navbar-menu active\" : \"navbar-menu\"}>\r\n            <li className=\"navBar-li\">\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <NurseMsgList inbox={nurseInbox} />\r\n              </div>\r\n            </li>\r\n\r\n            <li className=\"navBar-li\">\r\n              <button className=\"logout\" onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"patient_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Patient Name\",\r\n  },\r\n  {\r\n    id: \"s_problem\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Diagnosis\",\r\n  },\r\n  {\r\n    id: \"patient_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"r_priority\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"date_created\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Last Updated (Date and Time)\",\r\n  },\r\n  {\r\n    id: \"SBAR_history\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR history\",\r\n  },\r\n  {\r\n    id: \"update\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Update\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"patient_name\" ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Patient List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n    tableLayout: \"fixed\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"r_priority\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [patientId, setPatientId] = React.useState(0);\r\n  const [patientRoom, setPatientRoom] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [searchState, setSearchState] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      s_problem: \"-\",\r\n      patient_room_id: \"-\",\r\n      r_priority: \"-\",\r\n      update_status: \"-\",\r\n      last_updated: \"-\",\r\n      SBAR_history: \"-\",\r\n      update: \"-\",\r\n    },\r\n  ]);\r\n\r\n  const history = useHistory();\r\n\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      note_patient_id: null,\r\n      date_created: \"-\",\r\n      s_problem: \"-\",\r\n      patient_room_id: null,\r\n      r_priority: \"-\",\r\n      update_status: \"-\",\r\n      last_updated: \"-\",\r\n      SBAR_history: \"-\",\r\n      update: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://server.wmaneesh.com/nurse/viewPatients/${props.nurseId}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setPatients(result);\r\n          setSearchState(result);\r\n        }\r\n      });\r\n  }, [props.nurseId]);\r\n\r\n  useEffect(() => {\r\n    const searchedPatients = searchState.filter((patient) =>\r\n      patient.patient_name.toLowerCase().startsWith(props.search.toLowerCase())\r\n    );\r\n    setPatients(searchedPatients);\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name, id, room_id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    setPatientName(name);\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    console.log(name, id, room_id);\r\n    setPatientName(name);\r\n    setPatientId(id);\r\n    setPatientRoom(room_id);\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selected.length > 0) {\r\n      setTimeout(function () {\r\n        //your code to be executed after 1 second\r\n        history.push(\r\n          `/medmemo/nurse/${patientName}/${patientId}/${patientRoom}`\r\n        );\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // position: \"absolute\",\r\n        margin: \"auto\",\r\n        marginTop: \"15rem\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patient, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        tabIndex={-1}\r\n                        key={patient.patient_name}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patient.patient_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.s_problem}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.patient_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.r_priority}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.date_created}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/medmemo/nurse/SBARHistory/${patient.patient_name}`,\r\n                              patientName: patient.patient_name,\r\n                              patientId: patient.note_patient_id,\r\n                              roomId: patient.patient_room_id,\r\n                            }}\r\n                          >\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              View SBAR History\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.update_status !== \"Update Required\" ? (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={(event) =>\r\n                                handleClick(\r\n                                  event,\r\n                                  patient.patient_name,\r\n                                  patient.note_patient_id,\r\n                                  patient.patient_room_id\r\n                                )\r\n                              }\r\n                            >\r\n                              {patient.update_status}\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              onClick={(event) =>\r\n                                handleClick(\r\n                                  event,\r\n                                  patient.patient_name,\r\n                                  patient.note_patient_id,\r\n                                  patient.patient_room_id\r\n                                )\r\n                              }\r\n                            >\r\n                              {patient.update_status}\r\n                            </Button>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 25 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Header = (props) => (\r\n  <div className=\"nurse__title\">\r\n    <h1>{props.title}</h1>\r\n  </div>\r\n);\r\n\r\nHeader.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  ThemeProvider,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  InputLabel,\r\n  TextField,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox as MuiCheckbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n      verticleAlighn: \"center\",\r\n    },\r\n    \" & .MuiInputBase-input\": {\r\n      display: \"inline-block\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      display: \"inline-block\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n    error: red,\r\n  },\r\n});\r\n\r\nexport function useForm(\r\n  validateOnChange = false,\r\n  validate,\r\n  situation,\r\n  background,\r\n  assessment,\r\n  recommendation\r\n) {\r\n  const [situationValue, setSituationValue] = useState(situation);\r\n  const [backgroundValue, setBackgroundValue] = useState(background);\r\n  const [assessmentValue, setAssessmentValue] = useState(assessment);\r\n  const [recValue, setRecValue] = useState(recommendation);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // const handleInput = userCallback(() => {\r\n\r\n  const handleReset = (event) => {\r\n    setAssessmentValue(situation);\r\n    setBackgroundValue(background);\r\n    setAssessmentValue(assessment);\r\n    setRecValue(recommendation);\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name.charAt(0) === \"s\" || name.charAt(0) === \"n\") {\r\n      setSituationValue({\r\n        ...situationValue,\r\n        [name]: value,\r\n      });\r\n    } else if (name.charAt(0) === \"b\") {\r\n      setBackgroundValue({\r\n        ...backgroundValue,\r\n        [name]: value,\r\n      });\r\n    } else if (name.charAt(0) === \"a\") {\r\n      setAssessmentValue({\r\n        ...assessmentValue,\r\n        [name]: value,\r\n      });\r\n    } else if (name.charAt(0) === \"r\") {\r\n      setRecValue({\r\n        ...recValue,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  return {\r\n    situationValue,\r\n    backgroundValue,\r\n    assessmentValue,\r\n    recValue,\r\n    errors,\r\n    setErrors,\r\n    handleInput,\r\n    handleReset,\r\n  };\r\n}\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <form className={classes.root} autoComplete=\"off\" {...other}>\r\n        {props.children}\r\n      </form>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport function Grid12(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function Grid6(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={6} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function TextFieldSingle(props) {\r\n  const { name, label, defaultValue, onBlur } = props;\r\n  return (\r\n    <TextField\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      label={label}\r\n      name={name}\r\n      value={defaultValue}\r\n      onBlur={onBlur}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Inputgroup(props) {\r\n  const { name, label, defaultValue, onBlur, text, error = null } = props;\r\n  return (\r\n    <>\r\n      <InputLabel>{text}</InputLabel>\r\n      <TextField\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        label={label}\r\n        name={name}\r\n        value={defaultValue}\r\n        onBlur={onBlur}\r\n        {...(error && { error: true, helperText: error })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function Checkbox(props) {\r\n  const { name, label, value, onBlur } = props;\r\n\r\n  const convertToEventFromCheckbox = (name, value) => ({\r\n    target: {\r\n      name,\r\n      value,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormControlLabel\r\n        control={\r\n          <MuiCheckbox\r\n            name={name}\r\n            color=\"primary\"\r\n            checked={value}\r\n            onChange={(event) =>\r\n              onBlur(convertToEventFromCheckbox(name, event.target.checked))\r\n            }\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  label: {\r\n    textTransform: \"none\",\r\n  },\r\n}));\r\n\r\nexport function ButtonForm(props) {\r\n  const { label, size, color, variant, onClick, ...other } = props;\r\n  const buttonstyles = buttonStyles();\r\n\r\n  return (\r\n    <Button\r\n      classes={{ root: buttonstyles.root, label: buttonstyles.label }}\r\n      variant={variant || \"contained\"}\r\n      size={size || \"large\"}\r\n      color={color || \"primary\"}\r\n      onClick={onClick}\r\n      {...other}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Checkbox, Inputgroup } from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Background(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"background\">B</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container align=\"left\">\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Patient's mental status is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Alert and oriented to person place and time\"\r\n              name=\"b_awareness_alert_oriented\"\r\n              value={props.background.b_awareness_alert_oriented}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Confused and cooperative\"\r\n              name=\"b_awareness_confused_cooperative\"\r\n              value={props.background.b_awareness_confused_cooperative}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"non-cooperative, agitated or combative\"\r\n              name=\"b_awareness_non_coop_agit_combative\"\r\n              value={props.background.b_awareness_non_coop_agit_combative}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Stuporous and not talking clearly and possibly not able to swallow\"\r\n              name=\"b_awareness_stuporous\"\r\n              value={props.background.b_awareness_stuporous}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Comatose. Eyes closed. Not responding to stimulation\"\r\n              name=\"b_awareness_comatose\"\r\n              value={props.background.b_awareness_comatose}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Skin is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Warm and dry\"\r\n              name=\"b_skin_warm_dry\"\r\n              value={props.background.b_skin_warm_dry}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Pale\"\r\n              name=\"b_skin_pale\"\r\n              value={props.background.b_skin_pale}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Mottled\"\r\n              name=\"b_skin_mottled\"\r\n              value={props.background.b_skin_mottled}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Diaphoretic\"\r\n              name=\"b_skin_diaphoretic\"\r\n              value={props.background.b_skin_diaphoretic}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremities are cold\"\r\n              name=\"b_skin_extremities_cold\"\r\n              value={props.background.b_skin_extremities_cold}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremities are warm\"\r\n              name=\"b_skin_extremities_warm\"\r\n              value={props.background.b_skin_extremities_warm}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Patient is not or is on oxygen:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"(%)\"\r\n              name=\"s_o2\"\r\n              value={props.background.s_o2}\r\n              onBlur={props.handleInput}\r\n              text=\"The Patient has been on \"\r\n            ></Inputgroup>\r\n            <Inputgroup\r\n              label=\"(hours)\"\r\n              name=\"b_o2_time\"\r\n              value={props.background.b_o2_time}\r\n              onBlur={props.handleInput}\r\n              text=\"For how long:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The oximeter does not detect a good puslse and is giving erratic readings\"\r\n              name=\"b_oximeter_detection\"\r\n              value={props.background.b_oximeter_detection}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Background;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport {\r\n  Grid12,\r\n  TextFieldSingle,\r\n  Inputgroup,\r\n  Checkbox,\r\n} from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Situation(props) {\r\n  const { nurseName } = props;\r\n\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"situation\">S</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container align=\"left\">\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Nurse name\"\r\n              name=\"nurseId\"\r\n              defaultValue={nurseName}\r\n              text=\"This is\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Room Number\"\r\n              name=\"note_room_id\"\r\n              defaultValue={props.roomId}\r\n              text=\"I'm calling from\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Patient name and location\"\r\n              name=\"note_patient_id\"\r\n              defaultValue={props.patientName}\r\n              onBlur={props.handleInput}\r\n              text=\"I'm calling about: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Code status\"\r\n              name=\"s_code_status\"\r\n              value={props.situation.s_code_status}\r\n              onBlur={props.handleInput}\r\n              error={props.errors.s_code_status}\r\n              text=\"The Patient's code status is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"s_problem\"\r\n              value={props.situation.s_problem}\r\n              onBlur={props.handleInput}\r\n              error={props.errors.s_problem}\r\n              text=\"The problem I am calling about is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid item xs={12} lg={4} xl={4}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              I have assessed the patient personally. Vital signs are:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item xs={12} lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Blood Pressure (mmHg)\"\r\n              name=\"s_BP\"\r\n              value={props.situation.s_BP}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Pulse (bpm)\"\r\n              name=\"s_pulse\"\r\n              value={props.situation.s_pulse}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Respiration (breaths/min)\"\r\n              name=\"s_respiration\"\r\n              value={props.situation.s_respiration}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Temperature (celcius)\"\r\n              name=\"s_temperature\"\r\n              value={props.situation.s_temperature}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={4} xl={3}>\r\n            <TextFieldSingle\r\n              label=\"O2 sat (%)\"\r\n              name=\"s_o2\"\r\n              value={props.situation.s_o2}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              I am concerned about the:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Blood pressure because it is less than 90 or 30 mmHg below usual\"\r\n              name=\"s_concern_bp\"\r\n              value={props.situation.s_concern_bp}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Pulse because it is over 125 or less than 45 per minute\"\r\n              name=\"s_concern_pulse\"\r\n              value={props.situation.s_concern_pulse}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Respiration because it is less than 10 or over 30 breaths per minute\"\r\n              name=\"s_concern_respiration\"\r\n              value={props.situation.s_concern_respiration}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Temperature because it is less than 34 or over 40 celsius degrees\"\r\n              name=\"s_concern_temperature\"\r\n              value={props.situation.s_concern_temperature}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"O2 Sat because it is <90% despite oxygen given\"\r\n              name=\"s_concern_o2\"\r\n              value={props.situation.s_concern_o2}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Situation;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Assessment(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n    <div className=\"assessment\">A</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid containe justify=\"flex-start\" align=\"left\">\r\n          <Grid item xs={12}>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"a_problem\"\r\n              value={props.assessment.a_problem}\r\n              onBlur={props.handleInput}\r\n              text=\"This is what I think the problem is:\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item xs={12} lg={4} xl={2}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              The problem seems to be:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item xs={6} lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Cardiac\"\r\n              name=\"a_problem_cardiac\"\r\n              value={props.assessment.a_problem_cardiac}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={6} lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Infection\"\r\n              name=\"a_problem_infection\"\r\n              value={props.assessment.a_problem_infection}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={6} lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Neurologic\"\r\n              name=\"a_problem_neurologic\"\r\n              defaultValue={props.assessment.a_problem_neurologic}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={6} lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Respiratory\"\r\n              name=\"a_problem_respitory\"\r\n              value={props.assessment.a_problem_respitory}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am not sure what the problem is but the Patient is deteriorating\"\r\n              name=\"a_problem_unsure_deterioriating\"\r\n              value={props.assessment.a_problem_unsure_deterioriating}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The Patient seems to be unstable, we need to do something\"\r\n              name=\"a_unstable\"\r\n              value={props.assessment.a_unstable}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am afraid the Patient may arrest\"\r\n              name=\"a_arrest\"\r\n              value={props.assessment.a_arrest}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assessment;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Recommendation(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"recommendation\">R</div>\r\n      <Paper className={paperstyle.pageContent} elevation={6}>\r\n        <Grid container align=\"left\">\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"What needs to be done\"\r\n              name=\"r_request\"\r\n              value={props.recommendation.r_request}\r\n              onBlur={props.handleInput}\r\n              text=\"I request that you  \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Priority scale\"\r\n              name=\"r_priority\"\r\n              value={props.recommendation.r_priority}\r\n              onBlur={props.handleInput}\r\n              text=\"Priority of the condition from a scale of 1-3, 1 being the least and 3 being the most \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"Talk to the Patient or family about code status\"\r\n              name=\"r_patient_family_code_status\"\r\n              value={props.recommendation.r_patient_family_code_status}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"CXR, ABG, EKG, CBC, or BMP\"\r\n              name=\"r_test_needed\"\r\n              value={props.recommendation.r_test_needed}\r\n              onBlur={props.handleInput}\r\n              text=\"Are any tests needed:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              If a change in treatment is ordered then ask:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"frequency\"\r\n              name=\"r_freq_vital_signs\"\r\n              value={props.recommendation.r_freq_vital_signs}\r\n              onBlur={props.handleInput}\r\n              text=\"How often do you want vital signs taken?\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"How long do you expect this problem will last?\"\r\n              name=\"r_time_problem_will_last\"\r\n              value={props.recommendation.r_time_problem_will_last}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"If the Patient does not get better when would you want us to call again?\"\r\n              name=\"r_problem_persist_contact\"\r\n              value={props.recommendation.r_problem_persist_contact}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendation;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Background from \"./Background.js\";\r\nimport Situation from \"./Situation.js\";\r\nimport Assessment from \"./Assessment.js\";\r\nimport Recommendation from \"./Recommendation.js\";\r\nimport { Form, ButtonForm, useForm } from \"../Sbar/useForm.js\";\r\n\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\n//CHECK NULL FIELDS TO SEE IF YOU CAN JUST MAKE THEM EMPTY STRINGS. MYSQL DOESNT LIKE NULL\r\nconst situation = {\r\n  note_id: \"\",\r\n  note_patient_id: 0,\r\n  note_nurse_id: 0,\r\n  note_room_id: -1,\r\n  date_created: \"\",\r\n  s_problem: \"\",\r\n  s_code_status: \"\",\r\n  s_BP: -1,\r\n  s_pulse: -1,\r\n  s_respiration: -1,\r\n  s_temperature: -1,\r\n  s_o2: -1,\r\n  s_concern_bp: false,\r\n  s_concern_pulse: false,\r\n  s_concern_temperature: false,\r\n  s_concern_o2: false,\r\n  s_concern_respiration: false,\r\n};\r\n\r\nconst background = {\r\n  b_awareness_alert_oriented: false,\r\n  b_awareness_confused_cooperative: false,\r\n  b_awareness_non_coop_agit_combative: false,\r\n  b_awareness_lethargic: false,\r\n  b_awareness_stuporous: false,\r\n  b_awareness_comatose: false,\r\n  b_skin_warm_dry: false,\r\n  b_skin_pale: false,\r\n  b_skin_mottled: false,\r\n  b_skin_diaphoretic: false,\r\n  b_skin_extremities_cold: false,\r\n  b_skin_extremities_warm: false,\r\n  b_o2_percent: \"\",\r\n  b_o2_time: -1,\r\n  b_oximeter_detection: false,\r\n};\r\n\r\nconst assessment = {\r\n  a_problem: \"\",\r\n  a_problem_cardiac: false,\r\n  a_problem_infection: false,\r\n  a_problem_neurologic: false,\r\n  a_problem_respitory: false,\r\n  a_problem_unsure_deterioriating: false,\r\n  a_unstable: false,\r\n  a_arrest: false,\r\n};\r\n\r\nconst recommendation = {\r\n  r_request: \"\",\r\n  r_priority: false,\r\n  r_patient_family_code_status: false,\r\n  r_test_needed: \"\",\r\n  r_freq_vital_signs: \"\",\r\n  r_time_problem_will_last: \"\",\r\n  r_problem_persist_contact: \"\",\r\n};\r\n\r\nexport default function Sbarform(props) {\r\n  const [open, setOpen] = useState(false); //for modal\r\n  const [status, setStatus] = useState(null);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const validate = (fieldValues = situationValue) => {\r\n    let temp = { ...errors };\r\n    if (\"s_problem\" in fieldValues)\r\n      temp.s_problem = fieldValues.s_problem ? \"\" : \"This field is required\";\r\n    if (\"s_code_status\" in fieldValues)\r\n      temp.s_code_status = fieldValues.s_code_status\r\n        ? \"\"\r\n        : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === situationValue)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const {\r\n    situationValue,\r\n    backgroundValue,\r\n    assessmentValue,\r\n    recValue,\r\n    errors,\r\n    setErrors,\r\n    handleInput,\r\n    handleReset,\r\n  } = useForm(\r\n    true,\r\n    validate,\r\n    situation,\r\n    background,\r\n    assessment,\r\n    recommendation\r\n  );\r\n\r\n  let combinedValues = {};\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validate()) {\r\n      combinedValues = {\r\n        ...situationValue,\r\n        ...backgroundValue,\r\n        ...assessmentValue,\r\n        ...recValue,\r\n      };\r\n      console.log(combinedValues);\r\n\r\n      console.log(\"Submit button was pressed\");\r\n      creatNewSbarNote();\r\n    } else {\r\n      setStatus(0);\r\n      setStatusMessage(`Required fields are emtpy`);\r\n      handleClickOpen();\r\n    }\r\n  };\r\n\r\n  const creatNewSbarNote = useCallback(() => {\r\n    fetch(`https://server.wmaneesh.com/nurse/addNewSBAR/${props.patientId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(combinedValues),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        setStatus(1);\r\n        setStatusMessage(\"SBAR was successfully submitted\");\r\n        handleClickOpen();\r\n        return res.json();\r\n      } else {\r\n        setStatus(0);\r\n        setStatusMessage(\"SBAR was not submitted\");\r\n        handleClickOpen();\r\n      }\r\n    });\r\n  }, [combinedValues]);\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    situationValue.note_patient_id = parseInt(props.patientId);\r\n    situationValue.note_nurse_id = parseInt(props.nurseId);\r\n    situationValue.note_room_id = parseInt(props.roomId);\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Situation\r\n        handleInput={handleInput}\r\n        errors={errors}\r\n        nurseName={props.nurseName}\r\n        patientName={props.patientName}\r\n        situation={situationValue}\r\n        roomId={props.roomId}\r\n      />\r\n      <Background handleInput={handleInput} background={backgroundValue} />\r\n      <Assessment handleInput={handleInput} assessment={assessmentValue} />\r\n      <Recommendation handleInput={handleInput} recommendation={recValue} />\r\n\r\n      <div\r\n        className=\"button-styles\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ButtonForm label=\"Submit\" type=\"submit\" />\r\n        <ButtonForm color=\"default\" label=\"Reset\" type=\"reset\" />\r\n        <div>\r\n          <SubmitDone\r\n            open={open}\r\n            onClose={handleClose}\r\n            status={status}\r\n            statusMessage={statusMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, makeStyles } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Header from \"../Nurse/Header\";\r\nimport Sbarfrom from \"./Sbarform.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    position: \"absolute\",\r\n    padding: \"2%\",\r\n    top: \"0\",\r\n  },\r\n}));\r\n\r\nexport default function Sbar(props) {\r\n  const param = useParams();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Header title={`Patient: ${param.patientName}`} />\r\n      <div className=\"paper-container\">\r\n        <Paper className={classes.pageContent} elevation={4}>\r\n          <Sbarfrom\r\n            nurseId={props.nurseId}\r\n            nurseName={props.nurseName}\r\n            patientName={param.patientName}\r\n            patientId={param.patientId}\r\n            roomId={param.roomId}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Collapse } from \"@material-ui/core\";\r\n\r\nimport firebase from \"../firebase/firebase\";\r\n\r\nconst ContactPhysicanCard = (props) => {\r\n  const [physName, setPhysName] = useState(\"\");\r\n  const [physician_id, setPhysicianId] = useState(\"\");\r\n  const [specialty, setSpecialty] = useState(\"\");\r\n  const [availability, setAvailability] = useState(\"Available\");\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n  const dbf = firebase.firestore();\r\n\r\n  useEffect(() => {\r\n    fetch(`https://server.wmaneesh.com/nurse/getPhysInfo/${props.patientId}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setPhysName(result[0].physician_name);\r\n          setPhysicianId(result[0].physician_id);\r\n          setSpecialty(result[0].physician_specialty);\r\n        }\r\n      });\r\n  }, [props]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setRemarks(e.target.value);\r\n    console.log(remarks);\r\n  };\r\n\r\n  const handleSubmitClick = (e) => {\r\n    e.preventDefault();\r\n    var d = new Date();\r\n\r\n    const item = {\r\n      physician_id: physician_id,\r\n      physician_name: physName,\r\n      nurse_id: props.nurseId,\r\n      nurse_name: props.nurseName,\r\n      patient_id: props.patientId,\r\n      patient_name: props.patientName,\r\n      date_submitted: d.toLocaleString(),\r\n      text: remarks,\r\n      read: false,\r\n      ack: false,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    };\r\n\r\n    const res = dbf.collection(`msg`).add(item);\r\n    handleExpandClick();\r\n    props.onDialogSubmitChange(true);\r\n    setRemarks(\"\");\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    handleExpandClick();\r\n    setRemarks(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"contactPcontainer\">\r\n      <div className=\"cardContainer\">\r\n        <div className=\"imageSpace\">\r\n          <div className=\"imageSpaceColBlock\" color=\"primary\"></div>\r\n\r\n          <div className=\"imageDiv\">\r\n            <img\r\n              className=\"AvImage\"\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/matthew.png\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ContactContent\">\r\n          <div className=\"ContactText\">\r\n            <div className=\"ContactHeader\">Dr. {`${physName}`}</div>\r\n            <div className=\"ContactSpecialty\">\r\n              <span className=\"date\">{specialty}</span>\r\n            </div>\r\n            <div className=\"description\">{availability}</div>\r\n          </div>\r\n          <div\r\n            className=\"ContactControlButton\"\r\n            style={expanded ? { padding: \"5px\" } : { padding: \"25px\" }}\r\n          >\r\n            <Collapse in={!expanded}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleExpandClick}\r\n              >\r\n                Request Contact\r\n              </Button>\r\n            </Collapse>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"extraContent\">\r\n          <Collapse in={expanded}>\r\n            <form\r\n              className=\"remarksForm\"\r\n              onSubmit={handleSubmitClick}\r\n              onReset={handleCancelClick}\r\n            >\r\n              <div\r\n                className=\"remarksText\"\r\n                style={({ width: \"90%\" }, { display: \"flex\" })}\r\n              >\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"Additional Remarks\"\r\n                  multiline\r\n                  rows={3}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange}\r\n                  style={{ width: 210 }}\r\n                  value={remarks}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"ContactButtons\">\r\n                <div className=\"ContactCancelButton\">\r\n                  <Button\r\n                    style={{\r\n                      maxWidth: \"90px\",\r\n                      maxHeight: \"30px\",\r\n                      minWidth: \"25px\",\r\n                      minHeight: \"25px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    //onClick={handleExpandClick}\r\n                    type=\"reset\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                <div className=\"ContactSubmitButton\">\r\n                  <Button\r\n                    style={{\r\n                      maxWidth: \"90px\",\r\n                      maxHeight: \"30px\",\r\n                      minWidth: \"25px\",\r\n                      minHeight: \"25px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPhysicanCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"nurse_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Nurse Incharge\",\r\n  },\r\n  {\r\n    id: \"date_created\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Date Created\",\r\n  },\r\n  {\r\n    id: \"note_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"s_problem\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"view_sbar\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"nurse_name\" ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          SBAR History\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n    tableLayout: \"fixed\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"patient_name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [searchState, setSearchState] = useState([\r\n    {\r\n      sbar_note_archive_patient_id: \"-\",\r\n      nurse_name: \"-\",\r\n      sbar_note_archive_date_created: \"-\",\r\n      sbar_note_archive_room_id: \"-\",\r\n      s_problem: \"-\",\r\n    },\r\n  ]);\r\n\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      sbar_note_archive_patient_name: \"-\",\r\n      sbar_note_archive_patient_id: \"-\",\r\n      nurse_name: \"-\",\r\n      sbar_note_archive_date_created: \"-\",\r\n      sbar_note_archive_room_id: \"-\",\r\n      s_problem: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.nurseId, props.patientId);\r\n    fetch(`https://server.wmaneesh.com/nurse/SBARHistory/${props.patientId}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          console.log(result);\r\n          setPatients(result);\r\n          setSearchState(result);\r\n        }\r\n      });\r\n  }, [props.patientId]);\r\n\r\n  useEffect(() => {\r\n    const searchedPatients = searchState.filter((patient) =>\r\n      patient.nurse_name.toLowerCase().startsWith(props.search.toLowerCase())\r\n    );\r\n    setPatients(searchedPatients);\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patients, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        tabIndex={-1}\r\n                        key={index}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patients.nurse_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.sbar_note_archive_date_created}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.sbar_note_archive_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.s_problem}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/medmemo/nurse/viewSBAR\",\r\n                              patientName:\r\n                                patients.sbar_note_archive_patient_name,\r\n                              nurseName: patients.nurse_name,\r\n                              patientId: patients.sbar_note_archive_patient_id,\r\n                              dateCreated:\r\n                                patients.sbar_note_archive_date_created,\r\n                            }}\r\n                          >\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              View SBAR\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 25 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function DialogTest({ openDiag, handleChange }) {\r\n  console.log(\"dialog component:\", openDiag);\r\n\r\n  const handleClickOpen = () => {\r\n    // openDiag ? setOpen(true) : null;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    handleChange(false);\r\n    // setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openDiag}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Message Sent\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            The physician has been notified.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Got it\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  ThemeProvider,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  InputLabel,\r\n  TextField,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox as MuiCheckbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n      verticleAlighn: \"center\",\r\n    },\r\n    \" & .MuiInputBase-input\": {\r\n      display: \"inline-block\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      display: \"inline-block\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n    error: red,\r\n  },\r\n});\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <form className={classes.root} autoComplete=\"off\" {...other}>\r\n        {props.children}\r\n      </form>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport function Grid12(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function Grid6(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={6} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function TextFieldSingle(props) {\r\n  const { name, label, defaultValue } = props;\r\n  return (\r\n    <TextField\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      label={label}\r\n      name={name}\r\n      value={defaultValue}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Inputgroup(props) {\r\n  const { name, label, defaultValue, text } = props;\r\n  return (\r\n    <>\r\n      <InputLabel>{text}</InputLabel>\r\n      <TextField\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        label={label}\r\n        name={name}\r\n        value={defaultValue}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function Checkbox(props) {\r\n  const { name, label, defaultValue } = props;\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormControlLabel\r\n        disabled={defaultValue === 1 ? false : true}\r\n        control={\r\n          <MuiCheckbox\r\n            name={name}\r\n            color=\"primary\"\r\n            checked={defaultValue === 1 ? true : false}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  label: {\r\n    textTransform: \"none\",\r\n  },\r\n}));\r\n\r\nexport function ButtonForm(props) {\r\n  const { label, size, color, variant, onClick, ...other } = props;\r\n  const buttonstyles = buttonStyles();\r\n\r\n  return (\r\n    <Button\r\n      classes={{ root: buttonstyles.root, label: buttonstyles.label }}\r\n      variant={variant || \"contained\"}\r\n      size={size || \"large\"}\r\n      color={color || \"primary\"}\r\n      onClick={onClick}\r\n      {...other}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Checkbox, Inputgroup } from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Background(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"background\">B</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The patient's mental status is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Alert and oriented to person place and time.\"\r\n              name=\"b_awareness_alert_oriented\"\r\n              defaultValue={props.background.b_awareness_alert_oriented}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Confused and cooperative.\"\r\n              name=\"b_awareness_confused_cooperative\"\r\n              defaultValue={props.background.b_awareness_confused_cooperative}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Non-cooperative, agitated, or combative.\"\r\n              name=\"b_awareness_non_coop_agit_combative\"\r\n              defaultValue={\r\n                props.background.b_awareness_non_coop_agit_combative\r\n              }\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Stuporous and not talking clearly and possibly not able to swallow.\"\r\n              name=\"b_awareness_stuporous\"\r\n              defaultValue={props.background.b_awareness_stuporous}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Comatose. Eyes closed. Not responding to stimulation.\"\r\n              name=\"b_awareness_comatose\"\r\n              defaultValue={props.background.b_awareness_comatose}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Skin is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Warm and dry\"\r\n              name=\"b_skin_warm_dry\"\r\n              defaultValue={props.background.b_skin_warm_dry}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Pale\"\r\n              name=\"b_skin_pale\"\r\n              defaultValue={props.background.b_skin_pale}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Mottled\"\r\n              name=\"b_skin_mottled\"\r\n              defaultValue={props.background.b_skin_mottled}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Diaphoretic\"\r\n              name=\"b_skin_diaphoretic\"\r\n              defaultValue={props.background.b_skin_diaphoretic}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremely Cold\"\r\n              name=\"b_skin_extremities_cold\"\r\n              defaultValue={props.background.b_skin_extremities_cold}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremely warm\"\r\n              name=\"b_skin_extremities_warm\"\r\n              defaultValue={props.background.b_skin_extremities_warm}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Patient is not or is on oxygen:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"(%)\"\r\n              name=\"s_o2\"\r\n              defaultValue={props.background.b_o2_percent}\r\n              text=\"The patient has been on \"\r\n            ></Inputgroup>\r\n            <Inputgroup\r\n              label=\"(minutes)\"\r\n              name=\"b_o2_time\"\r\n              defaultValue={props.background.b_o2_time}\r\n              text=\"For:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The oximeter does not detect a good pulse and is giving erratic readings.\"\r\n              name=\"b_oximeter_detection\"\r\n              defaultValue={props.background.b_oximeter_detection}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Background;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport {\r\n  Grid12,\r\n  TextFieldSingle,\r\n  Inputgroup,\r\n  Checkbox,\r\n} from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Situation(props) {\r\n  const { nurseName } = props;\r\n\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"situation\">S</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Nurse Name\"\r\n              name=\"nurseId\"\r\n              defaultValue={nurseName}\r\n              text=\"This is\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Room Number\"\r\n              name=\"note_room_id\"\r\n              defaultValue={props.situation.sbar_note_archive_room_id}\r\n              text=\"I'm calling from\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Patient name and location\"\r\n              name=\"note_patient_id\"\r\n              defaultValue={props.situation.sbar_note_archive_patient_name}\r\n              text=\"I'm calling about: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Code status\"\r\n              name=\"s_code_status\"\r\n              defaultValue={props.situation.s_code_status}\r\n              text=\"The Patient's code status is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"s_problem\"\r\n              defaultValue={props.situation.s_problem}\r\n              text=\"The problem I am calling about is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid item lg={4} xl={4}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              I have assessed the patient personaly: Vital signs are:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Blood Pressure\"\r\n              name=\"s_BP\"\r\n              defaultValue={props.situation.s_BP}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Pulse\"\r\n              name=\"s_pulse\"\r\n              defaultValue={props.situation.s_pulse}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Respiration\"\r\n              name=\"s_respiration\"\r\n              defaultValue={props.situation.s_respiration}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Temperature\"\r\n              name=\"s_temperature\"\r\n              defaultValue={props.situation.s_temperature}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={3}>\r\n            <TextFieldSingle\r\n              label=\"O2 sat\"\r\n              name=\"s_o2\"\r\n              defaultValue={props.situation.s_o2}\r\n            />\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              I am concerned about the:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Blood pressure because it is less than 90 or 30 mmHg below usual.\"\r\n              name=\"s_concern_bp\"\r\n              defaultValue={props.situation.s_concern_bp}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Pulse because it is over 125 or less than 45.\"\r\n              name=\"s_concern_pulse\"\r\n              defaultValue={props.situation.s_concern_pulse}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Respiration because it is less than 10 or over 30.\"\r\n              name=\"s_concern_respiration\"\r\n              defaultValue={props.situation.s_concern_respiration}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Temperature because it is less than 96 or over 104.\"\r\n              name=\"s_concern_temperature\"\r\n              defaultValue={props.situation.s_concern_temperature}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"O2 Sat because it is <90% despite oxygen.\"\r\n              name=\"s_concern_o2\"\r\n              defaultValue={props.situation.s_concern_o2}\r\n            ></Checkbox>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Situation;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Assessment(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"assessment\">A</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"a_problem\"\r\n              defaultValue={props.assessment.a_problem}\r\n              text=\"This is what I think the problem is:\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              The problem seems to be related to:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Cardiac\"\r\n              name=\"a_problem_cardiac\"\r\n              defaultValue={props.assessment.a_problem_cardiac}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Infections\"\r\n              name=\"a_problem_infection\"\r\n              defaultValue={props.assessment.a_problem_infection}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Neurological\"\r\n              name=\"a_problem_neurologic\"\r\n              defaultdefaultValue={props.assessment.a_problem_neurologic}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Respiratory\"\r\n              name=\"a_problem_respitory\"\r\n              defaultValue={props.assessment.a_problem_respitory}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am not sure what the problem is but the patient is deteriorating.\"\r\n              name=\"a_problem_unsure_deterioriating\"\r\n              defaultValue={props.assessment.a_problem_unsure_deterioriating}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The patient seems to be unstable, we need to do something.\"\r\n              name=\"a_unstable\"\r\n              defaultValue={props.assessment.a_unstable}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am afraid the patient may arrest.\"\r\n              name=\"a_arrest\"\r\n              defaultValue={props.assessment.a_arrest}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assessment;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Recommendation(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"recommendation\">R</div>\r\n      <Paper className={paperstyle.pageContent} elevation={6}>\r\n        <Grid container>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"What needs to be done\"\r\n              name=\"r_request\"\r\n              defaultValue={props.recommendation.r_request}\r\n              text=\"I request that you  \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Priority scale\"\r\n              name=\"r_priority\"\r\n              defaultValue={props.recommendation.r_priority}\r\n              text=\"Priority of the condition from a scale of 1-3: 1 being the lowest and 3 being the highest. \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"Talk to the patient or family about code status.\"\r\n              name=\"r_patient_family_code_status\"\r\n              defaultValue={props.recommendation.r_patient_family_code_status}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"CXR, ABG, EKG, CBC, BMP etc\"\r\n              name=\"r_test_needed\"\r\n              defaultValue={props.recommendation.r_test_needed}\r\n              text=\"Are any tests needed:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              If a change in treatment is ordered then ask:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"frequency\"\r\n              name=\"r_freq_vital_signs\"\r\n              defaultValue={props.recommendation.r_freq_vital_signs}\r\n              text=\"How often do you want vital signs taken?\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"How long do you expect this problem will last?\"\r\n              name=\"r_time_problem_will_last\"\r\n              defaultValue={props.recommendation.r_time_problem_will_last}\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"If the patient does not get better when would you want us to call again?\"\r\n              name=\"r_problem_persist_contact\"\r\n              defaultValue={props.recommendation.r_problem_persist_contact}\r\n            ></Inputgroup>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendation;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Background from \"./Background.js\";\r\nimport Situation from \"./Situation.js\";\r\nimport Assessment from \"./Assessment.js\";\r\nimport Recommendation from \"./Recommendation.js\";\r\nimport { ButtonForm, useForm, Form } from \"./UseFormView.js\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\n\r\n//CHECK NULL FIELDS TO SEE IF YOU CAN JUST MAKE THEM EMPTY STRINGS. MYSQL DOESNT LIKE NULL\r\nconst situation = {\r\n  sbar_note_archive_patient_id: \"\",\r\n  sbar_note_archive_patient_name: \"\",\r\n  sbar_note_archive_room_id: \"\",\r\n  sbar_note_archive_date_created: \"\",\r\n  s_problem: \"\",\r\n  s_code_status: \"\",\r\n  s_BP: \"\",\r\n  s_pulse: \"\",\r\n  s_respiration: \"\",\r\n  s_temperature: \"\",\r\n  s_o2: \"\",\r\n  s_concern_bp: \"\",\r\n  s_concern_pulse: \"\",\r\n  s_concern_temperature: \"\",\r\n  s_concern_o2: \"\",\r\n  s_concern_respiration: \"\",\r\n};\r\n\r\nconst background = {\r\n  b_awareness_alert_oriented: \"\",\r\n  b_awareness_confused_cooperative: \"\",\r\n  b_awareness_non_coop_agit_combative: \"\",\r\n  b_awareness_lethargic: \"\",\r\n  b_awareness_stuporous: \"\",\r\n  b_awareness_comatose: \"\",\r\n  b_skin_warm_dry: \"\",\r\n  b_skin_pale: \"\",\r\n  b_skin_mottled: \"\",\r\n  b_skin_diaphoretic: \"\",\r\n  b_skin_extremities_cold: \"\",\r\n  b_skin_extremities_warm: \"\",\r\n  b_o2_percent: \"\",\r\n  b_o2_time: \"\",\r\n  b_oximeter_detection: \"\",\r\n};\r\n\r\nconst assessment = {\r\n  a_problem: \"\",\r\n  a_problem_cardiac: \"\",\r\n  a_problem_infection: \"\",\r\n  a_problem_neurologic: \"\",\r\n  a_problem_respitory: \"\",\r\n  a_problem_unsure_deterioriating: \"\",\r\n  a_unstable: \"\",\r\n  a_arrest: \"\",\r\n};\r\n\r\nconst recommendation = {\r\n  r_request: \"\",\r\n  r_priority: \"\",\r\n  r_patient_family_code_status: \"\",\r\n  r_test_needed: \"\",\r\n  r_freq_vital_signs: \"\",\r\n  r_time_problem_will_last: \"\",\r\n  r_problem_persist_contact: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function ViewSbarForm(props) {\r\n  const [situationValue, setSituationValue] = useState(situation);\r\n  const [backgroundValue, setBackgroundValue] = useState(background);\r\n  const [assessmentValue, setAssessmentValue] = useState(assessment);\r\n  const [recValue, setRecValue] = useState(recommendation);\r\n\r\n  const [loadingSbarStatus, setLoadingSbarStatus] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    console.log(props.dateCreated, props.patientId);\r\n    fetch(\r\n      `https://server.wmaneesh.com/nurse/getSBARHistoryFields/${props.dateCreated}/${props.patientId}`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        //console.log(result);\r\n        if (result !== undefined && result[0] !== 0) {\r\n          for (let [key, value] of Object.entries(result[0])) {\r\n            //console.log(`${key}: ${value}`);\r\n            if (key.charAt(0) === \"s\") {\r\n              setSituationValue((prevSituationValue) => {\r\n                return { ...prevSituationValue, [key]: value };\r\n              });\r\n              // console.log(situationValue);\r\n            } else if (key.charAt(0) === \"b\") {\r\n              setBackgroundValue((prevBackgroundValue) => {\r\n                return { ...prevBackgroundValue, [key]: value };\r\n              });\r\n            } else if (key.charAt(0) === \"a\") {\r\n              setAssessmentValue((prevAssessmentValue) => {\r\n                return { ...prevAssessmentValue, [key]: value };\r\n              });\r\n            } else if (key.charAt(0) === \"r\") {\r\n              setRecValue((prevRecValue) => {\r\n                return { ...prevRecValue, [key]: value };\r\n              });\r\n            }\r\n          }\r\n          setLoadingSbarStatus(true);\r\n        }\r\n      });\r\n    // Update the document title using the browser API\r\n    //situation.sbar_note_archive_patient_id = parseInt(props.patientId);\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      {!loadingSbarStatus ? (\r\n        <div className={classes.root}>\r\n          <CircularProgress\r\n            style={{ position: \"fixed\", top: \"30%\", left: \"50%\" }}\r\n            size={200}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Form>\r\n          <div>\r\n            <Situation\r\n              nurseName={props.nurseName}\r\n              patientName={props.patientName}\r\n              situation={situationValue}\r\n            />\r\n            <Background background={backgroundValue} />\r\n            <Assessment assessment={assessmentValue} />\r\n            <Recommendation recommendation={recValue} />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, makeStyles } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Header from \"../../Nurse/Header\";\r\nimport ViewSbarForm from \"./ViewSbarForm.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    position: \"absolute\",\r\n    padding: \"2%\",\r\n    top: \"0\",\r\n  },\r\n}));\r\n\r\nexport default function ViewSbar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Header title={`Patient: ${props.patientName}`} />\r\n      <Header title={`Created on: ${props.dateCreated}`} />\r\n      <div className=\"paper-container-1\">\r\n        <Paper className={classes.pageContent} elevation={4}>\r\n          <ViewSbarForm\r\n            patientId={props.patientId}\r\n            nurseName={props.nurseName}\r\n            dateCreated={props.dateCreated}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../NavBar/NavBar.js\";\r\nimport PatientTable from \"./PatientTable.js\";\r\nimport Header from \"./Header\";\r\nimport Sbar from \"../Sbar/Sbar.js\";\r\n// import CreatePatient from \"../CreatePatient/CreatePatient.js\";\r\nimport ContactPhysicanCard from \"./ContactPhysicianCard.js\";\r\nimport HistoryTable from \"./HistoryTable.js\";\r\nimport DialogTest from \"./notify/DialogBox\";\r\n\r\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/\";\r\n\r\nimport ViewSbar from \"../Sbar/ViewSbar/ViewSbar.js\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n  },\r\n});\r\n\r\nconst NursePage = (props) => {\r\n  const [nurseId, setNurseId] = useState(\"\");\r\n  const [nurseName, setNurseName] = useState(\"\");\r\n  const [showDialog, setShowDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // setNurseId(props.userToken);\r\n    fetch(`https://server.wmaneesh.com/nurse/getId/${props.userToken}`, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setNurseId(result[0].nurse_id);\r\n          setNurseName(result[0].nurse_name);\r\n        }\r\n      });\r\n  }, [props]);\r\n\r\n  function handleDialogChange(e) {\r\n    setShowDialog(e);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n        setAuthenticate={props.setAuthenticate}\r\n        nurseId={nurseId}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/medmemo/nurse\">\r\n          <Header title={`Hi ${nurseName}`} />\r\n          <MuiThemeProvider theme={theme}>\r\n            <PatientTable search={props.search} nurseId={nurseId} />\r\n          </MuiThemeProvider>\r\n        </Route>\r\n\r\n        <Route path=\"/medmemo/nurse/SBARhistory/:patientName\">\r\n          <Header title={`SBAR History of ${props.location.patientName}`} />\r\n          <MuiThemeProvider theme={theme}>\r\n            <div className=\"historyContainer\">\r\n              <HistoryTable\r\n                search={props.search}\r\n                nurseId={nurseId}\r\n                patientName={props.location.patientName}\r\n                patientId={props.location.patientId}\r\n              />\r\n              <ContactPhysicanCard\r\n                patientId={props.location.patientId}\r\n                patientName={props.location.patientName}\r\n                nurseId={nurseId}\r\n                nurseName={nurseName}\r\n                onDialogSubmitChange={handleDialogChange}\r\n              />\r\n              <div className=\"sbarHistoryDialog\">\r\n                <DialogTest\r\n                  openDiag={showDialog}\r\n                  handleChange={handleDialogChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </MuiThemeProvider>\r\n        </Route>\r\n\r\n        <Route exact path=\"/medmemo/nurse/:patientName/:patientId/:roomId\">\r\n          <Sbar nurseId={nurseId} nurseName={nurseName} />\r\n        </Route>\r\n\r\n        <Route path=\"/medmemo/nurse/viewSBAR\">\r\n          <ViewSbar\r\n            nurseName={props.location.nurseName}\r\n            patientId={props.location.patientId}\r\n            patientName={props.location.patientName}\r\n            dateCreated={props.location.dateCreated}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NursePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRouteNurse = ({\r\n  authenticate,\r\n  accountType,\r\n  path,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  // console.log(authenticate);\r\n  // console.log(accountType);\r\n  // console.log(path);\r\n  let auth = false;\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"/isAuthenticated\")\r\n  //     .then((res) => {\r\n  //       if (res.ok) {\r\n  //         return res.json();\r\n  //       } else {\r\n  //         console.log(\"network response was bad\");\r\n  //       }\r\n  //     })\r\n  //     .then((result) => {\r\n  //       if (result) {\r\n  //         console.log(\"im in the protected route thing\");\r\n  //         auth = true;\r\n  //         // setAuthenticate(true);\r\n  //       } else {\r\n  //         console.log(\"im in the protected route thing\");\r\n  //         auth = false;\r\n  //         // setAuthenticate(false);\r\n  //       }\r\n  //     });\r\n  // }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticate & (accountType === path) ? (\r\n          <Component {...props} {...rest} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/medmemo/\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRouteNurse;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst ProtectedLogin = ({\r\n  authenticate,\r\n  component: Component,\r\n  accountType,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !authenticate ? (\r\n          <Component {...props} {...rest} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: `${accountType}`,\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedLogin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"patient_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Patient Name\",\r\n  },\r\n  {\r\n    id: \"s_problem\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Diagnosis\",\r\n  },\r\n  {\r\n    id: \"patient_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"r_priority\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"date_created\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Last Updated (Date and Time)\",\r\n  },\r\n  {\r\n    id: \"SBAR_history\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR history\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"patient_name\" ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Patient List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n    tableLayout: \"fixed\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"r_priority\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [patientId, setPatientId] = React.useState(0);\r\n  const [patientRoom, setPatientRoom] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [searchState, setSearchState] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      s_problem: \"-\",\r\n      patient_room_id: \"-\",\r\n      r_priority: \"-\",\r\n      update_status: \"-\",\r\n      last_updated: \"-\",\r\n      SBAR_history: \"-\",\r\n      update: \"-\",\r\n    },\r\n  ]);\r\n\r\n  const history = useHistory();\r\n\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      patient_id: \"-\",\r\n      s_problem: \"-\",\r\n      patient_room_id: null,\r\n      r_priority: \"-\",\r\n      date_created: \"-\",\r\n\r\n      SBAR_history: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"TABLE\", props.physicianID);\r\n    fetch(\r\n      `https://server.wmaneesh.com/physician/getPatientList/${props.physicianID}`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setPatients(result);\r\n          setSearchState(result);\r\n        }\r\n      });\r\n  }, [props.physicianID]);\r\n\r\n  useEffect(() => {\r\n    const searchedPatients = searchState.filter((patient) =>\r\n      patient.patient_name.toLowerCase().startsWith(props.search.toLowerCase())\r\n    );\r\n    setPatients(searchedPatients);\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name, id, room_id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    setPatientName(name);\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    console.log(name, id, room_id);\r\n    setPatientName(name);\r\n    setPatientId(id);\r\n    setPatientRoom(room_id);\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selected.length > 0) {\r\n      setTimeout(function () {\r\n        //your code to be executed after 1 second\r\n        history.push(\r\n          `/medmemo/physician/${patientName}/${patientId}/${patientRoom}`\r\n        );\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n  return (\r\n    <div\r\n      style={{\r\n        // position: \"absolute\",\r\n        margin: \"auto\",\r\n        marginTop: \"15rem\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patient, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        tabIndex={-1}\r\n                        key={patient.patient_name}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patient.patient_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.s_problem}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.patient_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.r_priority}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.date_created}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/medmemo/physician/SBARHistory/${patient.patient_name}`,\r\n                              patientName: patient.patient_name,\r\n                              patientId: patient.patient_id,\r\n                              roomId: patient.patient_room_id,\r\n                            }}\r\n                          >\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              View SBAR History\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 25 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PhysicianPatientTable from \"./PatientTableTemplate\";\r\n\r\nclass PhysicianPatientList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PhysicianPatientTable\r\n          physicianID={this.props.physicianID}\r\n          search={this.props.search}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhysicianPatientList;\r\n","import react, { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport {  Fade } from \"@material-ui/core\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nconst MessageFile = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [fadeIn, setFadeIn] = useState(true);\r\n\r\n  const db = firebase.firestore();\r\n  const [isAck, setIsAck] = useState();\r\n  let res = [];\r\n\r\n  useEffect(() => {\r\n    const g = async () => {\r\n      const ref = db.collection(`msg`).doc(props.keyval);\r\n      res = await ref.get();\r\n      const b = await res.get(\"ack\");\r\n      setIsAck(b);\r\n    };\r\n\r\n    g();\r\n  }, [props.pID, res]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const markread = () => {\r\n    const ref = db.collection(`msg`).doc(props.keyval);\r\n    ref.update({ read: true });\r\n  };\r\n  const markUnread = () => {\r\n    const ch = db.collection(`msg`).doc(props.keyval).update({ ack: false });\r\n    setOpen(false);\r\n    const ref = db.collection(`msg`).doc(props.keyval);\r\n    ref.update({ read: false });\r\n  };\r\n\r\n  const markAcknowledge = async () => {\r\n    setOpen(false);\r\n    const ref = db.collection(`msg`).doc(props.keyval);\r\n    const doc = await ref.get();\r\n    const set = !doc.data().ack;\r\n    ref.update({ ack: set });\r\n  };\r\n\r\n  const deleteMsg = () => {\r\n    setOpen(false);\r\n    setTimeout(() => {\r\n      setFadeIn(false);\r\n    }, 300);\r\n\r\n    setTimeout(() => {\r\n      const ref = db.collection(`msg`).doc(props.keyval).delete();\r\n    }, 350);\r\n  };\r\n\r\n\r\n  return (\r\n    <Fade in={fadeIn}>\r\n      <div className=\"PhysicianMessage\" style={{ padding: \"5px\" }}>\r\n        <div className=\"physicianMsgInfo\" onClick={handleClick}>\r\n          <MenuItem\r\n            className=\"PhysMsgTileMenuItem\"\r\n            style={{\r\n              fontWeight: `${props.readFlag === false ? \"650\" : \"450\"}`,\r\n              backgroundColor: `${\r\n                isAck === true\r\n                  ? \"#dcf2e2\"\r\n                  : props.readFlag === false\r\n                  ? \"#fff0fd\"\r\n                  : \"#ffffff\"\r\n              }`,\r\n            }}\r\n            onClick={markread}\r\n          >\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <div className=\"msgDate\">{props.date}</div>\r\n              <div className=\"msgPatName\">Patient: {props.patient_name}</div>\r\n              <div className=\"msgNurseName\">Nurse: {props.nurse_name}</div>\r\n            </div>\r\n          </MenuItem>\r\n        </div>\r\n        <Collapse\r\n          in={open}\r\n          style={{\r\n            color: \"dimgray\",\r\n          }}\r\n        >\r\n          <div className=\"physicianMsgSection\">\r\n            <div className=\"PhysicianMsgContents\">\r\n              <div className=\"msgTextHeader\">Message:</div>\r\n              <div className=\"msgText\">\r\n                <p>{props.text}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"PhysicianAcknowledgeContainer\">\r\n              <button className=\"acknowledgeButton\" onClick={markAcknowledge}>\r\n                <CheckIcon style={{ Color: \"#007a23\" }} />\r\n              </button>\r\n            </div>\r\n            <div className=\"PhysicianMsgUnreadContainer\">\r\n              <button className=\"MarkAsUnreadButton\" onClick={markUnread}>\r\n                Mark Unread\r\n              </button>\r\n            </div>\r\n            <div className=\"PhysicianMsgDeleteContainer\">\r\n              <button className=\"MsgDeleteButton\" onClick={deleteMsg}>\r\n                <HighlightOffIcon style={{ color: \"#6e0000\" }} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default MessageFile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport firebase from \"../../firebase/firebase\";\r\nimport MessageTile from \"./MessageTile\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function InboxList(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <div className=\"PhysInboxButton\">\r\n          <Button\r\n            ref={anchorRef}\r\n            aria-controls={open ? \"menu-list-grow\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleToggle}\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <div\r\n              className=\"PhysInboxLabel\"\r\n              style={{\r\n                //margin: \"4px\",\r\n                fontSize: \"1.5rem\",\r\n                textTransform: \"lowercase\",\r\n              }}\r\n            >\r\n              Inbox\r\n            </div>\r\n            <div className=\"physInboxNumIcon\">\r\n              <div className=\"PinboxNumText\">{props.inbox.length}</div>\r\n            </div>\r\n          </Button>\r\n        </div>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <div className=\"inboxContainer\">\r\n                    <MenuList\r\n                      autoFocusItem={open}\r\n                      id=\"menu-list-grow\"\r\n                      onKeyDown={handleListKeyDown}\r\n                    >\r\n                      {props.inbox.length > 0 ? (\r\n                        props.inbox.map((details, index) => (\r\n                          <div className=\"messages\" key={index}>\r\n                            <MessageTile\r\n                              keyval={details.key} // this is the firebase key for that msg\r\n                              patient_name={details.patient_name}\r\n                              nurse_name={details.nurse_name}\r\n                              date={details.date_submitted}\r\n                              text={details.text}\r\n                              readFlag={details.read}\r\n                              pID={props.physicianID}\r\n                            />\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <MenuItem>No Messages!</MenuItem>\r\n                      )}\r\n                    </MenuList>\r\n                  </div>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n//import icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClinicMedical,\r\n  faSearch,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from \"../../firebase/firebase\";\r\n\r\nimport InboxList from \"./InboxList\";\r\n\r\nconst PhysicianNavBar = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [inbox, setInbox] = useState([]);\r\n  const [physID, setPhysID] = useState(props.physicianID);\r\n  const db = firebase.firestore();\r\n  let temp = [];\r\n  let item = [];\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (props.physicianID !== undefined && props.physicianID !== \"\") {\r\n      const ref = db.collection(\"msg\");\r\n      const q = ref\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .where(\"physician_id\", \"==\", props.physicianID)\r\n\r\n        .onSnapshot((snapshot) => {\r\n          temp = [];\r\n          snapshot.forEach((childSnapshot) => {\r\n            item = childSnapshot.data();\r\n            item.key = childSnapshot.id;\r\n            temp.push(item);\r\n          });\r\n\r\n          setInbox(temp);\r\n        });\r\n    }\r\n  }, [props.physicianID]);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleSearchInput = (event) => {\r\n    props.setSearch(event.target.value);\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    props.setSearch(\"\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    fetch(\"https://server.wmaneesh.com/login/logout\", {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"logout was unsuccessfull\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        props.setAuthenticate(false);\r\n        history.push(\"/medmemo/\");\r\n      });\r\n  };\r\n\r\n  console.log(\"heres the inbox:\", inbox);\r\n  return (\r\n    <header className=\"main-navbar\">\r\n      <div className=\"navbar-contents\">\r\n        <a href=\"/\">\r\n          <FontAwesomeIcon className=\"logo fa-2x\" icon={faClinicMedical} />\r\n        </a>\r\n        <a className=\"search-icon\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search patient\"\r\n            value={props.search}\r\n            onChange={handleSearchInput}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"close\"\r\n            icon={faTimes}\r\n            onClick={handleReset}\r\n          />\r\n          <FontAwesomeIcon className=\"search\" icon={faSearch} />\r\n        </a>\r\n\r\n        <div\r\n          onClick={handleClick}\r\n          className={open ? \"hamburger-module active\" : \"hamburger-module\"}\r\n        >\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <nav className=\"navbar\">\r\n          <ul className={open ? \"navbar-menu active\" : \"navbar-menu\"}>\r\n            <li style={{ listStyle: \"none\", display: \"inline-block\" }}>\r\n              <div className=\"msgListContainer\">\r\n                <InboxList physicianID={props.physicianID} inbox={inbox} />\r\n              </div>\r\n            </li>\r\n            <li className=\"navBar-li\">\r\n              <button className=\"logout\" onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PhysicianNavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"nurse_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Nurse Incharge\",\r\n  },\r\n  {\r\n    id: \"date_created\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Date Created\",\r\n  },\r\n  {\r\n    id: \"note_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"r_priority\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"view_sbar\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"nurse_name\" ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          SBAR History\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n    tableLayout: \"fixed\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"r_priority\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [searchState, setSearchState] = useState([\r\n    {\r\n      sbar_note_archive_patient_id: \"-\",\r\n      nurse_name: \"-\",\r\n      sbar_note_archive_date_created: \"-\",\r\n      sbar_note_archive_room_id: \"-\",\r\n      r_priority: \"-\",\r\n    },\r\n  ]);\r\n  ///\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      sbar_note_archive_patient_name: \"-\",\r\n      sbar_note_archive_patient_id: \"-\",\r\n      nurse_name: \"-\",\r\n      sbar_note_archive_date_created: \"-\",\r\n      sbar_note_archive_room_id: \"-\",\r\n      r_priority: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.nurseId, props.patientId);\r\n    fetch(`https://server.wmaneesh.com/nurse/SBARHistory/${props.patientId}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          console.log(result);\r\n          setPatients(result);\r\n          setSearchState(result);\r\n        }\r\n      });\r\n  }, [props.patientId]);\r\n\r\n  useEffect(() => {\r\n    const searchedPatients = searchState.filter((patient) =>\r\n      patient.nurse_name.toLowerCase().startsWith(props.search.toLowerCase())\r\n    );\r\n    setPatients(searchedPatients);\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patients, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        tabIndex={-1}\r\n                        key={index}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patients.nurse_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.sbar_note_archive_date_created}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.sbar_note_archive_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.r_priority}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/medmemo/physician/viewSBAR\",\r\n                              patientName:\r\n                                patients.sbar_note_archive_patient_name,\r\n                              nurseName: patients.nurse_name,\r\n                              patientId: patients.sbar_note_archive_patient_id,\r\n                              dateCreated:\r\n                                patients.sbar_note_archive_date_created,\r\n                            }}\r\n                          >\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              View SBAR\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 25 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route, Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PhysicianPatientList from \"./PhysicianPatientList\";\r\nimport PhysicianNavBar from \"./notification/PhysicianNavbar\";\r\nimport Header from \"../Nurse/Header\";\r\n\r\nimport Navigation from \"../NavBar/NavBar.js\";\r\nimport Sbar from \"../Sbar/Sbar.js\";\r\nimport HistoryTable from \"./physicianHistoryTable.js\";\r\nimport DialogTest from \"./../Nurse/notify/DialogBox\";\r\n\r\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/\";\r\n\r\nimport ViewSbar from \"../Sbar/ViewSbar/ViewSbar.js\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n  },\r\n});\r\n\r\nconst PhysicianDashBoard = (props) => {\r\n  const [physicianId, setPhysicianId] = useState(\"\");\r\n  const [physician_name, setPhysicianName] = useState(\"\");\r\n  let temp2 = [];\r\n\r\n  useEffect(() => {\r\n    fetch(`https://server.wmaneesh.com/physician/getId/${props.userToken}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad, phys id\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setPhysicianId(result[0].physician_id);\r\n          setPhysicianName(`Dr. ${result[0].physician_name}`);\r\n          console.log(\"here\", physicianId);\r\n        }\r\n      });\r\n  }, [props.userToken]);\r\n\r\n  console.log(\"phys id:\", physicianId);\r\n  return (\r\n    <div>\r\n      <PhysicianNavBar\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n        setAuthenticate={props.setAuthenticate}\r\n        physicianID={physicianId}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/medmemo/physician\">\r\n          <Header title={physician_name} />\r\n          <MuiThemeProvider theme={theme}>\r\n            <PhysicianPatientList\r\n              search={props.search}\r\n              physicianID={physicianId}\r\n            />\r\n          </MuiThemeProvider>\r\n        </Route>\r\n\r\n        <Route path=\"/medmemo/physician/SBARhistory/:patientName\">\r\n          <Header title={`SBAR History of ${props.location.patientName}`} />\r\n          <MuiThemeProvider theme={theme}>\r\n            <div className=\"historyContainer\">\r\n              <HistoryTable\r\n                search={props.search}\r\n                nurseId={physicianId}\r\n                patientName={props.location.patientName}\r\n                patientId={props.location.patientId}\r\n              />\r\n            </div>\r\n          </MuiThemeProvider>\r\n        </Route>\r\n\r\n        <Route path=\"/medmemo/physician/viewSBAR\">\r\n          <ViewSbar\r\n            nurseName={props.location.nurseName}\r\n            patientId={props.location.patientId}\r\n            patientName={props.location.patientName}\r\n            dateCreated={props.location.dateCreated}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhysicianDashBoard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faStethoscope,\r\n  faUserNurse,\r\n  faUserInjured,\r\n  faChild,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faStethoscope, faUserNurse, faUserInjured, faChild, faUnlockAlt);\r\n\r\nconst DashboardButton = (props) => {\r\n  const [color, setColor] = useState(\"\");\r\n  const [iconUsed, setIconUsed] = useState(\"\");\r\n\r\n  var bgColors = {\r\n    Physician: \"#81b71a\",\r\n    Nurse: \"#00B1E1\",\r\n    Patient: \"#37BC9B\",\r\n    Family: \"#E18029\",\r\n    Unlock: \"#B22E44\",\r\n  };\r\n\r\n  const choose = () => {\r\n    if (props.title === \"Physician\") {\r\n      setColor(bgColors.Physician);\r\n      setIconUsed(faStethoscope);\r\n    } else if (props.title === \"Nurse\") {\r\n      setColor(bgColors.Nurse);\r\n      setIconUsed(faUserNurse);\r\n    } else if (props.title === \"Patient\") {\r\n      setColor(bgColors.Patient);\r\n      setIconUsed(faUserInjured);\r\n    } else if (props.title === \"Visitor\") {\r\n      setColor(bgColors.Family);\r\n      setIconUsed(faChild);\r\n    } else {\r\n      setColor(bgColors.Unlock);\r\n      setIconUsed(faUnlockAlt);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    choose();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"adminDashboardButtonContainer\">\r\n      <Link\r\n        to={`/medmemo/admin/${props.title}`}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <div\r\n          className=\"adminbuttonContainer\"\r\n          style={{ backgroundColor: `${color}` }}\r\n        >\r\n          <div className=\"containerbuttonicon\">\r\n            <div className=\"DashboardButtonicon\">\r\n              <FontAwesomeIcon\r\n                className=\"adminuser-icon\"\r\n                icon={iconUsed}\r\n                color={color}\r\n              />\r\n            </div>\r\n          </div>\r\n          {props.title !== \"Unlock\" ? (\r\n            <div className=\"adminDashboardButtonContent\">\r\n              <div className=\"adminDashboardButtonName\">{`Create ${props.title} Account`}</div>\r\n              <div className=\"accountCounter\">\r\n                <div className=\"adminDashboardButtonCount\">{`${props.count} ${props.title}s`}</div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"adminDashboardButtonContent\">\r\n              <div className=\"adminDashboardButtonName\">{`${props.title} Accounts`}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardButton;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\nconst GeneralCreatePage = (props) => {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <div>\r\n      <label className=\"cpLabel\">\r\n        {props.title}\r\n        <input {...field} {...props} />\r\n        <div>\r\n          {meta.error && meta.touched && (\r\n            <p className={\"error\"}>{meta.error}</p>\r\n          )}\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Testing 123 Testing \r\n\r\nexport default GeneralCreatePage;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  token: yup.string().required(\"Token is required*\"),\r\n  password: yup.string().required(\"Password is required*\"),\r\n  verifyPassword: yup.string().when(\"password\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\"),\r\n  }),\r\n  fname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"First Name is required*\"),\r\n  lname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"Last Name is required*\"),\r\n  department: yup.string().required(\"Department is required*\"),\r\n  specialty: yup.string().required(\"Specialty is required*\"),\r\n});\r\nclass CreatePatient extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.state = {\r\n      open: false,\r\n      status: 0,\r\n      statusMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState(() => ({ open: true }));\r\n    // this.setState.open = true;\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    this.setState(() => ({ open: false }));\r\n  };\r\n\r\n  handleSubmit = (data) => {\r\n    fetch(`https://server.wmaneesh.com/admin/addNurse`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 1 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"Nurse account was successfully created\",\r\n        }));\r\n        return res.json();\r\n      } else {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 0 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"There was an error creating the nurse account\",\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          token: \"\",\r\n          password: \"\",\r\n          fname: \"\",\r\n          lname: \"\",\r\n          department: \"\",\r\n          specialty: \"\",\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={(data) => this.handleSubmit(data)}\r\n      >\r\n        {({ handleSubmit }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <section className=\"patientForm\">\r\n                <div className=\"promptMessage\">\r\n                  <h3>Please Enter the Following Information:</h3>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Token\"}\r\n                  name={\"token\"}\r\n                  placeholder={\"Token\"}\r\n                  className=\"token cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Password\"}\r\n                  name={\"password\"}\r\n                  placeholder={\"Password\"}\r\n                  className=\"password cpInput\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Verify Password\"}\r\n                  name={\"verifyPassword\"}\r\n                  type=\"password\"\r\n                  placeholder={\"Password\"}\r\n                  className=\"password cpInput\"\r\n                />\r\n\r\n                <div className=\"full-name\">\r\n                  <div className=\"first-name\">\r\n                    <GeneralCreatePage\r\n                      title={\"First Name\"}\r\n                      name={\"fname\"}\r\n                      placeholder={\"First Name\"}\r\n                      className=\"firstName cpInput\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"last-name\">\r\n                    <GeneralCreatePage\r\n                      title={\"Last Name\"}\r\n                      name={\"lname\"}\r\n                      placeholder={\"Last Name\"}\r\n                      className=\"lastName cpInput\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Department\"}\r\n                  name={\"department\"}\r\n                  placeholder={\"Department\"}\r\n                  className=\"department cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Specialty\"}\r\n                  name={\"specialty\"}\r\n                  placeholder={\"Specialty\"}\r\n                  className=\"specialty cpInput\"\r\n                />\r\n\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons-submit\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                        Submit\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"buttons-cancel\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                        Cancel\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <SubmitDone\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    status={this.state.status}\r\n                    statusMessage={this.state.statusMessage}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePatient;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  token: yup.string().required(\"Token is required*\"),\r\n  password: yup.string().required(\"Password is required*\"),\r\n  verifyPassword: yup.string().when(\"password\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\"),\r\n  }),\r\n  fname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"First Name is required*\"),\r\n  lname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"Last Name is required*\"),\r\n  specialty: yup.string().required(\"Specialty is required*\"),\r\n});\r\nclass CreatePatient extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.state = {\r\n      open: false,\r\n      status: 0,\r\n      statusMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState(() => ({ open: true }));\r\n    // this.setState.open = true;\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    this.setState(() => ({ open: false }));\r\n  };\r\n\r\n  handleSubmit = (data) => {\r\n    console.log(\"feth is called?\");\r\n    fetch(`https://server.wmaneesh.com/admin/addPhysician`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 1 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"Physician account was successfully created\",\r\n        }));\r\n        return res.json();\r\n      } else {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 0 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"There was an error creating the physician account\",\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          token: \"\",\r\n          password: \"\",\r\n          fname: \"\",\r\n          lname: \"\",\r\n          department: \"\",\r\n          specialty: \"\",\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={(data) => this.handleSubmit(data)}\r\n      >\r\n        {({ handleSubmit }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <section className=\"patientForm\">\r\n                <div className=\"promptMessage\">\r\n                  <h3>Please Enter the Following Information:</h3>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Token\"}\r\n                  name={\"token\"}\r\n                  placeholder={\"Token\"}\r\n                  className=\"token cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Password\"}\r\n                  name={\"password\"}\r\n                  placeholder={\"Password\"}\r\n                  className=\"password cpInput\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Verify Password\"}\r\n                  name={\"verifyPassword\"}\r\n                  type=\"password\"\r\n                  placeholder={\"Password\"}\r\n                  className=\"password cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"First Name\"}\r\n                  name={\"fname\"}\r\n                  placeholder={\"First Name\"}\r\n                  className=\"firstName cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Last Name\"}\r\n                  name={\"lname\"}\r\n                  placeholder={\"Last Name\"}\r\n                  className=\"lastName cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Specialty\"}\r\n                  name={\"specialty\"}\r\n                  placeholder={\"Specialty\"}\r\n                  className=\"specialty cpInput\"\r\n                />\r\n\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons-submit\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                        Submit\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"buttons-cancel\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                        Cancel\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <SubmitDone\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    status={this.state.status}\r\n                    statusMessage={this.state.statusMessage}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePatient;\r\n","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  fname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"First Name is required*\"),\r\n  lname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"Last Name is required*\"),\r\n  admissionDate: yup.string().required(\"Admission Date is required*\"),\r\n  dateOfBirth: yup.string().required(\"Date of Birth is required*\"),\r\n  weight: yup.number().required(\"Weight is required*\"),\r\n  height: yup.number().required(\"Height is required*\"),\r\n  patient_id: yup.string().required(\"Patient ID is required*\"),\r\n  physician_id: yup.number().required(\"Physician ID is required*\"),\r\n  nurse_id: yup.number().required(\"Nurse ID is required*\"),\r\n  room_id: yup.number().required(\"Room number is required*\"),\r\n});\r\n\r\nexport default function CreatePatient(props) {\r\n  const [open, setOpen] = useState(false); //for modal\r\n  const [status, setStatus] = useState(0);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    fetch(`https://server.wmaneesh.com/admin/addPatient`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result !== undefined && result.affectedRows === 1) {\r\n          handleClickOpen();\r\n          setStatus(1);\r\n          setStatusMessage(\"Patient account was successfully created\");\r\n        } else {\r\n          handleClickOpen();\r\n          setStatus(0);\r\n          setStatusMessage(\"There was an error creating the patient account\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        patient_id: \"\",\r\n        fname: \"\",\r\n        lname: \"\",\r\n        admissionDate: \"\",\r\n        dateOfBirth: \"\",\r\n        weight: \"\",\r\n        height: \"\",\r\n        nurse_id: \"\",\r\n        physician_id: \"\",\r\n        room_id: \"\",\r\n      }}\r\n      validationSchema={formSchema}\r\n      onSubmit={(data) => handleSubmit(data)}\r\n    >\r\n      {({ handleSubmit }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <section className=\"patientForm\">\r\n              <div className=\"promptMessage\">\r\n                <h3>Please Enter the Following Information:</h3>\r\n              </div>\r\n              <div className=\"full-name\">\r\n                <div className=\"first-name\">\r\n                  <GeneralCreatePage\r\n                    title={\"First Name\"}\r\n                    name={\"fname\"}\r\n                    placeholder={\"First Name\"}\r\n                    className=\"firstName cpInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"last-name\">\r\n                  <GeneralCreatePage\r\n                    title={\"Last Name\"}\r\n                    name={\"lname\"}\r\n                    placeholder={\"Last Name\"}\r\n                    className=\"lastName cpInput\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <GeneralCreatePage\r\n                title={\"Date of Birth\"}\r\n                name={\"dateOfBirth\"}\r\n                type=\"date\"\r\n                className=\"dateOfBirth cpInput\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Admission Date\"}\r\n                name={\"admissionDate\"}\r\n                type=\"date\"\r\n                className=\"admissionDate cpInput\"\r\n              />\r\n\r\n              <div className=\"weight-height\">\r\n                <div className=\"weight\">\r\n                  <GeneralCreatePage\r\n                    title={\"Weight (lbs)\"}\r\n                    name={\"weight\"}\r\n                    placeholder={\"0.0 lb\"}\r\n                    type=\"number\"\r\n                    className=\"weightField cpInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"height\">\r\n                  <GeneralCreatePage\r\n                    title={\"Height (cm)\"}\r\n                    name={\"height\"}\r\n                    placeholder={\"0.0 cm\"}\r\n                    type=\"number\"\r\n                    className=\"weightField cpInput\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <GeneralCreatePage\r\n                title={\"Patient ID (Personal ID)\"}\r\n                name={\"patient_id\"}\r\n                type=\"text\"\r\n                className=\"patient_id cpInput\"\r\n                placeholder=\"Patient ID\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Physician ID\"}\r\n                name={\"physician_id\"}\r\n                type=\"text\"\r\n                className=\"physician_id cpInput\"\r\n                placeholder=\"Physician ID\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Nurse ID\"}\r\n                name={\"nurse_id\"}\r\n                type=\"text\"\r\n                className=\"nurse_id cpInput\"\r\n                placeholder=\"Nurse ID\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Room Number\"}\r\n                name={\"room_id\"}\r\n                type=\"text\"\r\n                className=\"room_id cpInput\"\r\n                placeholder=\"Room Number\"\r\n              />\r\n\r\n              <div className=\"buttons\">\r\n                <div className=\"buttons-submit\">\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                      Submit\r\n                    </a>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"buttons-cancel\">\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                      Cancel\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <SubmitDone\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  status={status}\r\n                  statusMessage={statusMessage}\r\n                />\r\n              </div>\r\n            </section>\r\n          </form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  token: yup.string().required(\"Token is required*\"),\r\n});\r\nclass UnlockAccounts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.state = {\r\n      open: false,\r\n      status: 0,\r\n      statusMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState(() => ({ open: true }));\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    this.setState(() => ({ open: false }));\r\n  };\r\n\r\n  handleSubmit = (data) => {\r\n    console.log(\"etch is called\");\r\n    fetch(`https://server.wmaneesh.com/admin/unlockAccount`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined) {\r\n          if (result[0] === \"S\") {\r\n            this.setState(() => ({ status: 1 }));\r\n            this.setState(() => ({\r\n              statusMessage: result,\r\n            }));\r\n            this.handleClickOpen();\r\n          } else {\r\n            this.setState(() => ({ status: 0 }));\r\n            this.setState(() => ({\r\n              statusMessage: result,\r\n            }));\r\n            this.handleClickOpen();\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          token: \"\",\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={(data) => this.handleSubmit(data)}\r\n      >\r\n        {({ handleSubmit }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <section className=\"patientForm\">\r\n                <div className=\"promptMessage\">\r\n                  <h3>Please Enter the Token to unlock the account:</h3>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Token\"}\r\n                  name={\"token\"}\r\n                  placeholder={\"Token\"}\r\n                  className=\"token cpInput\"\r\n                />\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons-submit\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                        Submit\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"buttons-cancel\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                        Cancel\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <SubmitDone\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    status={this.state.status}\r\n                    statusMessage={this.state.statusMessage}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnlockAccounts;\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../NavBar/NavBar.js\";\r\nimport DashboardButton from \"./DashboardButton\";\r\nimport PatientTable from \"../Nurse/PatientTable.js\";\r\nimport CreateNurse from \"../createNewUser/CreateNurse.js\";\r\nimport CreatePhysician from \"../createNewUser/CreatePhysician.js\";\r\nimport CreatePatient from \"../createNewUser/CreatePatient.js\";\r\nimport UnlockAccount from \"../createNewUser/UnlockAccount.js\";\r\n\r\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#5bc8c2\",\r\n      main: \"#33bbb3\",\r\n      dark: \"#23827d\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Admin = (props) => {\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setRemarks(e.target.value);\r\n    console.log(remarks);\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n        setAuthenticate={props.setAuthenticate}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/medmemo/admin\">\r\n          <section className=\"page\">\r\n            <div className=\"admin-button\">\r\n              <DashboardButton title=\"Patient\" count=\"200\" />\r\n              <DashboardButton title=\"Nurse\" count=\"50\" />\r\n              <DashboardButton title=\"Physician\" count=\"30\" />\r\n              <DashboardButton title=\"Visitor\" count=\"320\" />\r\n              <DashboardButton title=\"Unlock\" count=\"-\" />\r\n            </div>\r\n            {/* <div className=\"admin-table\">\r\n              <MuiThemeProvider theme={theme}>\r\n                <PatientTable search={props.search} />\r\n              </MuiThemeProvider>\r\n            </div> */}\r\n          </section>\r\n        </Route>\r\n        <MuiThemeProvider theme={theme}>\r\n          <Route exact path=\"/medmemo/admin/Patient\">\r\n            <CreatePatient />\r\n          </Route>\r\n\r\n          <Route exact path=\"/medmemo/admin/Nurse\">\r\n            <CreateNurse />\r\n          </Route>\r\n\r\n          <Route exact path=\"/medmemo/admin/Physician\">\r\n            <CreatePhysician />\r\n          </Route>\r\n\r\n          <Route exact path=\"/medmemo/admin/unlock\">\r\n            <UnlockAccount />\r\n          </Route>\r\n        </MuiThemeProvider>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\n\r\n//import styles\r\nimport \"./Styles/app.scss\";\r\n//import components\r\nimport Login from \"./Components/Login/Login.js\";\r\nimport NursePage from \"./Components/Nurse/NursePage.js\";\r\nimport ProtectedRoute from \"./Components/Routes/ProtectedRoute.js\";\r\nimport ProtectedLogin from \"./Components/Routes/ProtectedLogin.js\";\r\nimport Physician from \"./Components/Physician/PhysicianDashboard.js\";\r\nimport Admin from \"./Components/Admin/Admin.js\";\r\n// import \"./Components/firebase/firebase.js\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [accountType, setAccountType] = useState(\"\");\r\n  const [authenticate, setAuthenticate] = useState(false);\r\n  const [userToken, setUserToken] = useState(\"\");\r\n  //\"proxy\": \"https://159.203.29.156:443\",\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://server.wmaneesh.com/isAuthenticated\", {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== \"\") {\r\n          setAccountType(`/medmemo${result.path}`);\r\n          setAuthenticate(true);\r\n          setUserToken(result.user);\r\n        } else {\r\n          setAuthenticate(false);\r\n          setAccountType(\"/medmemo/\");\r\n          setUserToken(\"\");\r\n        }\r\n      });\r\n  }, [accountType, authenticate, userToken]);\r\n\r\n  const themes = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: \"#5bc8c2\",\r\n        main: \"#33bbb3\",\r\n        dark: \"#23827d\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {accountType !== \"\" ? (\r\n          <Switch>\r\n            <ProtectedRoute\r\n              path=\"/medmemo/nurse\"\r\n              component={NursePage}\r\n              search={search}\r\n              setSearch={setSearch}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              userToken={userToken}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/medmemo/physician\"\r\n              component={Physician}\r\n              search={search}\r\n              setSearch={setSearch}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              userToken={userToken}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/medmemo/admin\"\r\n              component={Admin}\r\n              search={search}\r\n              setSearch={setSearch}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n            />\r\n            <ProtectedLogin\r\n              path=\"/\"\r\n              component={Login}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              setAccountType={setAccountType}\r\n              setUserToken={setUserToken}\r\n            />\r\n          </Switch>\r\n        ) : (\r\n          <div className={classes.root}>\r\n            <MuiThemeProvider theme={themes}>\r\n              <CircularProgress\r\n                style={{ position: \"fixed\", top: \"30%\", left: \"50%\" }}\r\n                size={200}\r\n              />\r\n            </MuiThemeProvider>\r\n          </div>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n//import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import \"./Components/firebase/firebase.js\";\r\n// import NursePage from \"./Components/Nurse/NursePage.js\";\r\n\r\nReactDOM.render(\r\n  // <NursePage />,\r\n  <React.StrictMode>\r\n    <Router basename=\"/medmemo\">\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}