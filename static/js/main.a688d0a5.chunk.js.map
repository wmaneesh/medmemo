{"version":3,"sources":["Components/Modal/ResetPasswordModal.js","Components/Modal/SubmitDone.js","Components/Login/Login.js","Components/NavBar/NavBar.js","Components/Nurse/PatientTable.js","Components/Nurse/Header.js","Components/Sbar/useForm.js","Components/Sbar/Background.js","Components/Sbar/Situation.js","Components/Sbar/Assessment.js","Components/Sbar/Recommendation.js","Components/Sbar/Sbarform.js","Components/Sbar/Sbar.js","Components/Nurse/ContactPhysicianCard.js","Components/Nurse/HistoryTable.js","Components/Sbar/ViewSbar/UseFormView.js","Components/Sbar/ViewSbar/Background.js","Components/Sbar/ViewSbar/Situation.js","Components/Sbar/ViewSbar/Assessment.js","Components/Sbar/ViewSbar/Recommendation.js","Components/Sbar/ViewSbar/ViewSbarForm.js","Components/Sbar/ViewSbar/ViewSbar.js","Components/Nurse/NursePage.js","Components/Routes/ProtectedRoute.js","Components/Routes/ProtectedLogin.js","Components/Physician/PatientTableTemplate.js","Components/Physician/PhysicianPatientList.js","Components/Physician/PhysicianDashboard.js","Components/Admin/DashboardButton.js","Components/createNewUser/GeneralCreatePage.js","Components/createNewUser/CreateNurse.js","Components/createNewUser/CreatePhysician.js","Components/createNewUser/CreatePatient.js","Components/createNewUser/UnlockAccount.js","Components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["inputStyles","makeStyles","theme","root","margin","spacing","width","buttonStyles","ResetPasswordModal","props","inputClass","buttonClass","onClose","selectedValue","open","useState","token","setToken","newPassword","setNewPassword","errorStatus","setErrorStatus","errorText","setErrorText","handleClose","handleReset","event","console","log","fetch","method","headers","body","JSON","stringify","then","res","ok","json","result","Dialog","aria-labelledby","className","DialogTitle","id","InputLabel","TextField","label","variant","onChange","target","value","onBlur","error","helperText","Button","color","onClick","onKeyPress","which","SubmitDone","hanldeReturnToHome","returnKey","status","style","textAlign","fullWidth","maxWidth","statusMessage","to","Login","password","setPassword","setOpen","setStatusMessage","handleLogin","credentials","undefined","user_type","setAccountType","setAuthenticate","setUserToken","htmlFor","type","placeholder","e","icon","faUserMd","faUnlockAlt","cursor","NavBar","history","useHistory","faClinicMedical","search","setSearch","faTimes","faSearch","href","push","Cookies","remove","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","classes","onRequestSort","TableHead","TableRow","TableCell","padding","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","paddingTop","highlight","palette","primary","main","backgroundColor","lighten","text","secondary","dark","title","flex","fontSize","EnhancedTableToolbar","numSelected","name","Toolbar","clsx","Typography","component","Tooltip","IconButton","aria-label","useStyles","paper","marginBottom","table","minWidth","tableLayout","border","clip","height","overflow","position","top","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","patientName","setPatientName","patientId","setPatientId","patientRoom","setPatientRoom","page","rowsPerPage","patient_name","a_problem","patient_room_id","r_priority","update_status","last_updated","SBAR_history","update","searchState","setSearchState","note_patient_id","date_created","patients","setPatients","useEffect","nurseId","length","searchedPatients","filter","patient","toLowerCase","startsWith","handleClick","room_id","selectedIndex","indexOf","newSelected","concat","slice","setTimeout","emptyRows","Math","min","marginTop","display","flexDirection","justifyContent","alignItems","heigh","Paper","elevation","TableContainer","Table","size","onSelectAllClick","checked","newSelecteds","n","rowCount","TableBody","labelId","hover","role","tabIndex","scope","pathname","roomId","colSpan","Header","defaultProps","verticleAlighn","whiteSpace","createMuiTheme","red","Form","other","children","ThemeProvider","autoComplete","Grid12","Grid","item","xs","TextFieldSingle","defaultValue","Inputgroup","Checkbox","FormControl","FormControlLabel","control","convertToEventFromCheckbox","textTransform","ButtonForm","buttonstyles","paperStyle","pageContent","marginLeft","Background","paperstyle","container","fontWeight","md","background","b_awareness_alert_oriented","handleInput","b_awareness_confused_cooperative","b_awareness_non_coop_agit_combative","b_awareness_stuporous","b_awareness_comatose","b_skin_warm_dry","b_skin_pale","b_skin_mottled","b_skin_diaphoretic","b_skin_extremities_cold","b_skin_extremities_warm","s_o2","b_o2_time","b_oximeter_detection","Situation","nurseName","situation","s_code_status","errors","s_problem","lg","xl","s_BP","s_pulse","s_respiration","s_temperature","s_concern_bp","s_concern_pulse","s_concern_respiration","s_concern_temperature","s_concern_o2","Assessment","assessment","a_problem_cardiac","a_problem_infection","a_problem_neurologic","a_problem_respitory","a_problem_unsure_deterioriating","a_unstable","a_arrest","Recommendation","recommendation","r_request","r_patient_family_code_status","r_test_needed","r_freq_vital_signs","r_time_problem_will_last","r_problem_persist_contact","note_id","note_nurse_id","note_room_id","b_awareness_lethargic","b_o2_percent","Sbarform","setStatus","handleClickOpen","validate","fieldValues","situationValue","temp","setErrors","Object","values","every","x","setSituationValue","backgroundValue","setBackgroundValue","assessmentValue","setAssessmentValue","recValue","setRecValue","charAt","useForm","combinedValues","creatNewSbarNote","useCallback","parseInt","onSubmit","preventDefault","Sbar","param","useParams","ContactPhysicanCard","handleExpandClick","setExpanded","expanded","remarks","setRemarks","src","pname","specialty","availability","Collapse","in","multiline","rows","maxHeight","minHeight","sbar_note_archive_patient_id","nurse_name","sbar_note_archive_date_created","sbar_note_archive_room_id","sbar_note_archive_patient_name","dateCreated","disabled","defaultdefaultValue","ViewSbarForm","loadingSbarStatus","setLoadingSbarStatus","key","prevSituationValue","prevBackgroundValue","prevAssessmentValue","prevRecValue","entries","CircularProgress","left","ViewSbar","NursePage","setNurseId","setNurseName","userToken","nurse_id","exact","path","location","ProtectedRouteNurse","authenticate","accountType","Component","rest","render","state","from","ProtectedLogin","dense","setDense","nurse","isItemSelected","aria-checked","Switch","PhysicianPatientList","this","PhysicianDashBoard","library","add","faStethoscope","faUserNurse","faUserInjured","faChild","DashboardButton","setColor","iconUsed","setIconUsed","bgColors","textDecoration","count","GeneralCreatePage","useField","field","meta","touched","formSchema","yup","shape","required","fname","matches","lname","department","CreatePatient","setState","handleSubmit","data","bind","initialValues","validationSchema","admissionDate","dateOfBirth","weight","patient_id","physician_id","affectedRows","UnlockAccounts","light","Admin","CreateNurse","CreatePhysician","UnlockAccount","App","user","themes","ProtectedRoute","Physician","Boolean","window","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a688d0a5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  InputLabel,\r\n  TextField,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst inputStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ResetPasswordModal(props) {\r\n  const inputClass = inputStyles();\r\n  const buttonClass = buttonStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const [token, setToken] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [errorStatus, setErrorStatus] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleToken = (event) => {\r\n    setToken(event.target.value);\r\n  };\r\n\r\n  const handlePassword = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const returnKey = (event) => {\r\n    if (event.which === 13) {\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  const handleTokenCheck = (event) => {\r\n    fetch(`https://server.wmaneesh.com/login/tokenExists/${event.target.value}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== \"User exist\") {\r\n          setErrorStatus(true);\r\n          setErrorText(result);\r\n        } else {\r\n          setErrorStatus(false);\r\n          setErrorText(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    console.log(token, newPassword);\r\n    fetch(`https://server.wmaneesh.com/login/resetPassword`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: token,\r\n        newPassword: newPassword,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <form className=\"resetPassword-form\">\r\n        <DialogTitle id=\"simple-dialog-title\">Reset Password</DialogTitle>\r\n        <InputLabel>Please type in your token and new password</InputLabel>\r\n        <div className={`resetPassword-inputFields ${inputClass.root}`}>\r\n          <TextField\r\n            className=\"token\"\r\n            id=\"outlined-basic\"\r\n            label=\"Token\"\r\n            variant=\"outlined\"\r\n            onChange={handleToken}\r\n            onBlur={handleTokenCheck}\r\n            error={errorStatus}\r\n            helperText={errorText}\r\n          />\r\n          <TextField\r\n            className=\"newPassword\"\r\n            id=\"outlined-basic\"\r\n            label=\"New Password\"\r\n            variant=\"outlined\"\r\n            onChange={handlePassword}\r\n          />\r\n        </div>\r\n        <div className={`resetPassword-buttons ${buttonClass.root}`}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            label=\"Submit\"\r\n            onClick={handleReset}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            label=\"close\"\r\n            onClick={handleClose}\r\n            onKeyPress={returnKey}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n// Modal.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n// };\r\n\r\nexport default ResetPasswordModal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InputLabel,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SubmitDone(props) {\r\n  const buttonClass = buttonStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  console.log(props);\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const hanldeReturnToHome = (event) => {};\r\n\r\n  const returnKey = (event) => {\r\n    if (event.which === 13) {\r\n      if (props.status) {\r\n        hanldeReturnToHome();\r\n      } else {\r\n        handleClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modalContainer\">\r\n      <Dialog\r\n        style={{ textAlign: \"center\" }}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        open={open}\r\n        fullWidth\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle id=\"simple-dialog-title\">Submission Status</DialogTitle>\r\n        <InputLabel>{props.statusMessage}</InputLabel>\r\n\r\n        <div\r\n          className={`submitDone-buttons ${buttonClass.root}`}\r\n          style={{ margin: \"1rem\" }}\r\n        >\r\n          {props.status ? (\r\n            <Link to={\"/medmemo/\"}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                label=\"Submit\"\r\n                onClick={hanldeReturnToHome}\r\n                onKeyPress={returnKey}\r\n              >\r\n                Return To Home Page\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              label=\"close\"\r\n              onClick={handleClose}\r\n              onKeyPress={returnKey}\r\n            >\r\n              Retry\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Modal.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n//   open: PropTypes.bool.isRequired,\r\n// };\r\n\r\nexport default SubmitDone;\r\n","import React, { useState } from \"react\";\r\nimport ResetPasswordModal from \"../Modal/ResetPasswordModal\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n//import icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserMd, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Login = (props) => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false); //for modal\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const returnKey = (event) => {\r\n    if (event.which === 13) {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    fetch(\"https://server.wmaneesh.com/login\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({ token, password }),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result.user_type === undefined) {\r\n          setStatusMessage(result);\r\n        } else {\r\n          props.setAccountType(`/medmemo/${result.user_type}`);\r\n          props.setAuthenticate(true);\r\n          props.setUserToken(token);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"login-contents\">\r\n        <div className=\"login-title-sentence\">\r\n          <div className=\"login-title\">Welcome Back</div>\r\n          <div className=\"login-sentence\">\r\n            <p className=\"sentence\">\r\n              Please use the token provided by the admin to login\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-component\">\r\n          <div className=\"login-form\">\r\n            <div className=\"login-form-group\">\r\n              <label className=\"label\" htmlFor=\"token\">\r\n                Token\r\n              </label>\r\n              <input\r\n                className=\"token login-input\"\r\n                type=\"text\"\r\n                placeholder=\"token\"\r\n                onChange={(e) => setToken({ token: e.target.value })}\r\n                onKeyPress={returnKey}\r\n              />\r\n              <FontAwesomeIcon className=\"user-icon\" icon={faUserMd} />\r\n            </div>\r\n\r\n            <div className=\"login-form-group\">\r\n              <label className=\"label\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <input\r\n                className=\"password login-input\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                onChange={(e) => setPassword({ password: e.target.value })}\r\n                onKeyPress={returnKey}\r\n              />\r\n              <FontAwesomeIcon className=\"user-icon\" icon={faUnlockAlt} />\r\n            </div>\r\n          </div>\r\n          <div className=\"login-error\" style={{ textAlign: \"center\" }}>\r\n            <label style={{ color: \"red\" }}>{statusMessage}</label>\r\n          </div>\r\n          <div />\r\n          <div className=\"login-button\">\r\n            <button className=\"button\" onClick={handleLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <label\r\n              style={{ cursor: \"pointer\", color: \"#33bbb3\" }}\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Reset Password\r\n            </label>\r\n            <ResetPasswordModal open={open} onClose={handleClose} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n//import icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClinicMedical,\r\n  faSearch,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleSearchInput = (event) => {\r\n    props.setSearch(event.target.value);\r\n  };\r\n\r\n  const handleReset = (event) => {\r\n    props.setSearch(\"\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    console.log(\"logout is being called\");\r\n    fetch(\"https://server.wmaneesh.com/login/logout\", {\r\n      credentials: \"include\",\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        history.push(\"/medmemo/\");\r\n        return res.json();\r\n      } else {\r\n        console.log(\"logout was unsuccessfull\");\r\n      }\r\n    });\r\n    props.setAuthenticate(false);\r\n    Cookies.remove(\"token\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"main-navbar\">\r\n      <div className=\"navbar-contents\">\r\n        <Link to=\"/medmemo/\">\r\n          <FontAwesomeIcon className=\"logo fa-2x\" icon={faClinicMedical} />\r\n        </Link>\r\n        <a className=\"search-icon\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"search patient\"\r\n            value={props.search}\r\n            onChange={handleSearchInput}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"close\"\r\n            icon={faTimes}\r\n            onClick={handleReset}\r\n          />\r\n          <FontAwesomeIcon className=\"search\" icon={faSearch} />\r\n        </a>\r\n\r\n        <div\r\n          onClick={handleClick}\r\n          className={open ? \"hamburger-module active\" : \"hamburger-module\"}\r\n        >\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <nav className=\"navbar\">\r\n          <ul className={open ? \"navbar-menu active\" : \"navbar-menu\"}>\r\n            <li>\r\n              <a href=\"#\" className=\"navbar-links\">\r\n                Select Wing\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" className=\"navbar-links\">\r\n                Help\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <button className=\"logout\" onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"patient_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Patient Name\",\r\n  },\r\n  { id: \"a_problem\", numeric: false, disablePadding: false, label: \"Type\" },\r\n  {\r\n    id: \"patient_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"r_priority\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"date_created\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Last Updated (Date and Time)\",\r\n  },\r\n  {\r\n    id: \"SBAR_history\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR history\",\r\n  },\r\n  {\r\n    id: \"update\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Update\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"patient_name\" ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Patient List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n    tableLayout: \"fixed\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"patient_name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [patientId, setPatientId] = React.useState(0);\r\n  const [patientRoom, setPatientRoom] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [searchState, setSearchState] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      a_problem: \"-\",\r\n      patient_room_id: \"-\",\r\n      r_priority: \"-\",\r\n      update_status: \"-\",\r\n      last_updated: \"-\",\r\n      SBAR_history: \"-\",\r\n      update: \"-\",\r\n    },\r\n  ]);\r\n\r\n  const history = useHistory();\r\n\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      note_patient_id: null,\r\n      date_created: \"-\",\r\n      a_problem: \"-\",\r\n      patient_room_id: null,\r\n      r_priority: \"-\",\r\n      update_status: \"-\",\r\n      last_updated: \"-\",\r\n      SBAR_history: \"-\",\r\n      update: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://server.wmaneesh.com/nurse/viewPatients/${props.nurseId}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setPatients(result);\r\n          setSearchState(result);\r\n        }\r\n      });\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    const searchedPatients = searchState.filter((patient) =>\r\n      patient.patient_name.toLowerCase().startsWith(props.search.toLowerCase())\r\n    );\r\n    setPatients(searchedPatients);\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name, id, room_id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    setPatientName(name);\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    console.log(name, id, room_id);\r\n    setPatientName(name);\r\n    setPatientId(id);\r\n    setPatientRoom(room_id);\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selected.length > 0) {\r\n      setTimeout(function () {\r\n        //your code to be executed after 1 second\r\n        history.push(\r\n          `/medmemo/nurse/${patientName}/${patientId}/${patientRoom}`\r\n        );\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // position: \"absolute\",\r\n        margin: \"auto\",\r\n        marginTop: \"15rem\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patient, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        tabIndex={-1}\r\n                        key={patient.patient_name}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patient.patient_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.a_problem}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.patient_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.r_priority}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.date_created}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/medmemo/nurse/SBARHistory/${patient.patient_name}`,\r\n                              patientName: patient.patient_name,\r\n                              patientId: patient.note_patient_id,\r\n                              roomId: patient.patient_room_id,\r\n                            }}\r\n                          >\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              View SBAR History\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patient.update_status !== \"Update Required\" ? (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={(event) =>\r\n                                handleClick(\r\n                                  event,\r\n                                  patient.patient_name,\r\n                                  patient.note_patient_id,\r\n                                  patient.patient_room_id\r\n                                )\r\n                              }\r\n                            >\r\n                              {patient.update_status}\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"secondary\"\r\n                              onClick={(event) =>\r\n                                handleClick(\r\n                                  event,\r\n                                  patient.patient_name,\r\n                                  patient.note_patient_id,\r\n                                  patient.patient_room_id\r\n                                )\r\n                              }\r\n                            >\r\n                              {patient.update_status}\r\n                            </Button>\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 25 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Header = (props) => (\r\n  <div className=\"nurse__title\">\r\n    <h1>{props.title}</h1>\r\n  </div>\r\n);\r\n\r\nHeader.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  ThemeProvider,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  InputLabel,\r\n  TextField,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox as MuiCheckbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n      verticleAlighn: \"center\",\r\n    },\r\n    \" & .MuiInputBase-input\": {\r\n      display: \"inline-block\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      display: \"inline-block\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n    error: red,\r\n  },\r\n});\r\n\r\nexport function useForm(\r\n  validateOnChange = false,\r\n  validate,\r\n  situation,\r\n  background,\r\n  assessment,\r\n  recommendation\r\n) {\r\n  const [situationValue, setSituationValue] = useState(situation);\r\n  const [backgroundValue, setBackgroundValue] = useState(background);\r\n  const [assessmentValue, setAssessmentValue] = useState(assessment);\r\n  const [recValue, setRecValue] = useState(recommendation);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // const handleInput = userCallback(() => {\r\n\r\n  const handleReset = (event) => {\r\n    setAssessmentValue(situation);\r\n    setBackgroundValue(background);\r\n    setAssessmentValue(assessment);\r\n    setRecValue(recommendation);\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name.charAt(0) === \"s\" || name.charAt(0) === \"n\") {\r\n      setSituationValue({\r\n        ...situationValue,\r\n        [name]: value,\r\n      });\r\n    } else if (name.charAt(0) === \"b\") {\r\n      setBackgroundValue({\r\n        ...backgroundValue,\r\n        [name]: value,\r\n      });\r\n    } else if (name.charAt(0) === \"a\") {\r\n      setAssessmentValue({\r\n        ...assessmentValue,\r\n        [name]: value,\r\n      });\r\n    } else if (name.charAt(0) === \"r\") {\r\n      setRecValue({\r\n        ...recValue,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n  return {\r\n    situationValue,\r\n    backgroundValue,\r\n    assessmentValue,\r\n    recValue,\r\n    errors,\r\n    setErrors,\r\n    handleInput,\r\n    handleReset,\r\n  };\r\n}\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <form className={classes.root} autoComplete=\"off\" {...other}>\r\n        {props.children}\r\n      </form>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport function Grid12(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function Grid6(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={6} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function TextFieldSingle(props) {\r\n  const { name, label, defaultValue, onBlur } = props;\r\n  return (\r\n    <TextField\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      label={label}\r\n      name={name}\r\n      value={defaultValue}\r\n      onBlur={onBlur}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Inputgroup(props) {\r\n  const { name, label, defaultValue, onBlur, text, error = null } = props;\r\n  return (\r\n    <>\r\n      <InputLabel>{text}</InputLabel>\r\n      <TextField\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        label={label}\r\n        name={name}\r\n        value={defaultValue}\r\n        onBlur={onBlur}\r\n        {...(error && { error: true, helperText: error })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function Checkbox(props) {\r\n  const { name, label, value, onBlur } = props;\r\n\r\n  const convertToEventFromCheckbox = (name, value) => ({\r\n    target: {\r\n      name,\r\n      value,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormControlLabel\r\n        control={\r\n          <MuiCheckbox\r\n            name={name}\r\n            color=\"primary\"\r\n            checked={value}\r\n            onChange={(event) =>\r\n              onBlur(convertToEventFromCheckbox(name, event.target.checked))\r\n            }\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  label: {\r\n    textTransform: \"none\",\r\n  },\r\n}));\r\n\r\nexport function ButtonForm(props) {\r\n  const { label, size, color, variant, onClick, ...other } = props;\r\n  const buttonstyles = buttonStyles();\r\n\r\n  return (\r\n    <Button\r\n      classes={{ root: buttonstyles.root, label: buttonstyles.label }}\r\n      variant={variant || \"contained\"}\r\n      size={size || \"large\"}\r\n      color={color || \"primary\"}\r\n      onClick={onClick}\r\n      {...other}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Checkbox, Inputgroup } from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Background(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"background\">B</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The patient's mental status is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Alert and oriented to person place and time.\"\r\n              name=\"b_awareness_alert_oriented\"\r\n              value={props.background.b_awareness_alert_oriented}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Confused and cooperative.\"\r\n              name=\"b_awareness_confused_cooperative\"\r\n              value={props.background.b_awareness_confused_cooperative}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"non-cooperative, agitated or combative.\"\r\n              name=\"b_awareness_non_coop_agit_combative\"\r\n              value={props.background.b_awareness_non_coop_agit_combative}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Stuporous and not talking clearly and possibly not able to swallow.\"\r\n              name=\"b_awareness_stuporous\"\r\n              value={props.background.b_awareness_stuporous}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Comatose. Eyes closed. Not responding to stimulation.\"\r\n              name=\"b_awareness_comatose\"\r\n              value={props.background.b_awareness_comatose}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Skin is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Warm and dry\"\r\n              name=\"b_skin_warm_dry\"\r\n              value={props.background.b_skin_warm_dry}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Pale\"\r\n              name=\"b_skin_pale\"\r\n              value={props.background.b_skin_pale}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Mottled\"\r\n              name=\"b_skin_mottled\"\r\n              value={props.background.b_skin_mottled}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Diaphoretic\"\r\n              name=\"b_skin_diaphoretic\"\r\n              value={props.background.b_skin_diaphoretic}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremities are cold\"\r\n              name=\"b_skin_extremities_cold\"\r\n              value={props.background.b_skin_extremities_cold}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremities are warm\"\r\n              name=\"b_skin_extremities_warm\"\r\n              value={props.background.b_skin_extremities_warm}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Patient is not or is on oxygen:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"(%)\"\r\n              name=\"s_o2\"\r\n              value={props.background.s_o2}\r\n              onBlur={props.handleInput}\r\n              text=\"The patient has been on \"\r\n            ></Inputgroup>\r\n            <Inputgroup\r\n              label=\"(hours)\"\r\n              name=\"b_o2_time\"\r\n              value={props.background.b_o2_time}\r\n              onBlur={props.handleInput}\r\n              text=\"For how long:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The oximeter does not detect a good puslse and is giving erratic readings.\"\r\n              name=\"b_oximeter_detection\"\r\n              value={props.background.b_oximeter_detection}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Background;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport {\r\n  Grid12,\r\n  TextFieldSingle,\r\n  Inputgroup,\r\n  Checkbox,\r\n} from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Situation(props) {\r\n  const { nurseName } = props;\r\n\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"situation\">S</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Nurse Name\"\r\n              name=\"nurseId\"\r\n              defaultValue={nurseName}\r\n              text=\"This is\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Room Number\"\r\n              name=\"note_room_id\"\r\n              defaultValue={props.roomId}\r\n              text=\"I'm calling from\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Patient name and location\"\r\n              name=\"note_patient_id\"\r\n              defaultValue={props.patientName}\r\n              onBlur={props.handleInput}\r\n              text=\"I'm calling about: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Code status\"\r\n              name=\"s_code_status\"\r\n              value={props.situation.s_code_status}\r\n              onBlur={props.handleInput}\r\n              error={props.errors.s_code_status}\r\n              text=\"The Patient's code status is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"s_problem\"\r\n              value={props.situation.s_problem}\r\n              onBlur={props.handleInput}\r\n              error={props.errors.s_problem}\r\n              text=\"The problem I am calling about is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid item lg={4} xl={4}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              I have assessed the patient personaly: Vital signs are:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Blood Pressure\"\r\n              name=\"s_BP\"\r\n              value={props.situation.s_BP}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Pulse\"\r\n              name=\"s_pulse\"\r\n              value={props.situation.s_pulse}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Respiration\"\r\n              name=\"s_respiration\"\r\n              value={props.situation.s_respiration}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Temperature\"\r\n              name=\"s_temperature\"\r\n              value={props.situation.s_temperature}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={3}>\r\n            <TextFieldSingle\r\n              label=\"O2 sat\"\r\n              name=\"s_o2\"\r\n              value={props.situation.s_o2}\r\n              onBlur={props.handleInput}\r\n            />\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              I am concerned about the:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Blood pressure because it is less than 90 or 30 mmHg below usual.\"\r\n              name=\"s_concern_bp\"\r\n              value={props.situation.s_concern_bp}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Pulse because it is over 125 or less than 45.\"\r\n              name=\"s_concern_pulse\"\r\n              value={props.situation.s_concern_pulse}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Respiration because it is less than 10 or over 30.\"\r\n              name=\"s_concern_respiration\"\r\n              value={props.situation.s_concern_respiration}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Temperature because it is less than 96 or over 104.\"\r\n              name=\"s_concern_temperature\"\r\n              value={props.situation.s_concern_temperature}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"O2 Sat because it is <90% despite oxygen.\"\r\n              name=\"s_concern_o2\"\r\n              value={props.situation.s_concern_o2}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Situation;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Assessment(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n    <div className=\"assessment\">A</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"a_problem\"\r\n              value={props.assessment.a_problem}\r\n              onBlur={props.handleInput}\r\n              text=\"This is what I think the problem is:\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              The problem seems to be:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Cardiac\"\r\n              name=\"a_problem_cardiac\"\r\n              value={props.assessment.a_problem_cardiac}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Infection\"\r\n              name=\"a_problem_infection\"\r\n              value={props.assessment.a_problem_infection}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Neurologic\"\r\n              name=\"a_problem_neurologic\"\r\n              defaultValue={props.assessment.a_problem_neurologic}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Respitory\"\r\n              name=\"a_problem_respitory\"\r\n              value={props.assessment.a_problem_respitory}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am not sure what the problem is but the patient is deteriorating.\"\r\n              name=\"a_problem_unsure_deterioriating\"\r\n              value={props.assessment.a_problem_unsure_deterioriating}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The patient seems to be unstable, we need to do something.\"\r\n              name=\"a_unstable\"\r\n              value={props.assessment.a_unstable}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am afraid the patient may arrest.\"\r\n              name=\"a_arrest\"\r\n              value={props.assessment.a_arrest}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assessment;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"../Sbar/useForm.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Recommendation(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"recommendation\">R</div>\r\n      <Paper className={paperstyle.pageContent} elevation={6}>\r\n        <Grid container>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"What needs to be done\"\r\n              name=\"r_request\"\r\n              value={props.recommendation.r_request}\r\n              onBlur={props.handleInput}\r\n              text=\"I request that you  \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Priority scale\"\r\n              name=\"r_priority\"\r\n              value={props.recommendation.r_priority}\r\n              onBlur={props.handleInput}\r\n              text=\"Priority of the condition from a scale of 1-3, 1 being the least and 3 being the most \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"Talk to the patient or family about code status.\"\r\n              name=\"r_patient_family_code_status\"\r\n              value={props.recommendation.r_patient_family_code_status}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"CXR, ABG, EKG, CBC, or BMP\"\r\n              name=\"r_test_needed\"\r\n              value={props.recommendation.r_test_needed}\r\n              onBlur={props.handleInput}\r\n              text=\"Are any tests needed:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              If a change in treatment is ordered then ask:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"frequency\"\r\n              name=\"r_freq_vital_signs\"\r\n              value={props.recommendation.r_freq_vital_signs}\r\n              onBlur={props.handleInput}\r\n              text=\"How often do you want vital signs taken?\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"How long do you expect this problem will last?\"\r\n              name=\"r_time_problem_will_last\"\r\n              value={props.recommendation.r_time_problem_will_last}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"If the patient does not get better when would you want us to call again?\"\r\n              name=\"r_problem_persist_contact\"\r\n              value={props.recommendation.r_problem_persist_contact}\r\n              onBlur={props.handleInput}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendation;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Background from \"./Background.js\";\r\nimport Situation from \"./Situation.js\";\r\nimport Assessment from \"./Assessment.js\";\r\nimport Recommendation from \"./Recommendation.js\";\r\nimport { Form, ButtonForm, useForm } from \"../Sbar/useForm.js\";\r\n\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\n//CHECK NULL FIELDS TO SEE IF YOU CAN JUST MAKE THEM EMPTY STRINGS. MYSQL DOESNT LIKE NULL\r\nconst situation = {\r\n  note_id: \"\",\r\n  note_patient_id: 0,\r\n  note_nurse_id: 0,\r\n  note_room_id: -1,\r\n  date_created: \"\",\r\n  s_problem: \"\",\r\n  s_code_status: \"\",\r\n  s_BP: -1,\r\n  s_pulse: -1,\r\n  s_respiration: -1,\r\n  s_temperature: -1,\r\n  s_o2: -1,\r\n  s_concern_bp: false,\r\n  s_concern_pulse: false,\r\n  s_concern_temperature: false,\r\n  s_concern_o2: false,\r\n  s_concern_respiration: false,\r\n};\r\n\r\nconst background = {\r\n  b_awareness_alert_oriented: false,\r\n  b_awareness_confused_cooperative: false,\r\n  b_awareness_non_coop_agit_combative: false,\r\n  b_awareness_lethargic: false,\r\n  b_awareness_stuporous: false,\r\n  b_awareness_comatose: false,\r\n  b_skin_warm_dry: false,\r\n  b_skin_pale: false,\r\n  b_skin_mottled: false,\r\n  b_skin_diaphoretic: false,\r\n  b_skin_extremities_cold: false,\r\n  b_skin_extremities_warm: false,\r\n  b_o2_percent: \"\",\r\n  b_o2_time: -1,\r\n  b_oximeter_detection: false,\r\n};\r\n\r\nconst assessment = {\r\n  a_problem: \"\",\r\n  a_problem_cardiac: false,\r\n  a_problem_infection: false,\r\n  a_problem_neurologic: false,\r\n  a_problem_respitory: false,\r\n  a_problem_unsure_deterioriating: false,\r\n  a_unstable: false,\r\n  a_arrest: false,\r\n};\r\n\r\nconst recommendation = {\r\n  r_request: \"\",\r\n  r_priority: false,\r\n  r_patient_family_code_status: false,\r\n  r_test_needed: \"\",\r\n  r_freq_vital_signs: \"\",\r\n  r_time_problem_will_last: \"\",\r\n  r_problem_persist_contact: \"\",\r\n};\r\n\r\nexport default function Sbarform(props) {\r\n  const [open, setOpen] = useState(false); //for modal\r\n  const [status, setStatus] = useState(null);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const validate = (fieldValues = situationValue) => {\r\n    let temp = { ...errors };\r\n    if (\"s_problem\" in fieldValues)\r\n      temp.s_problem = fieldValues.s_problem ? \"\" : \"This field is required\";\r\n    if (\"s_code_status\" in fieldValues)\r\n      temp.s_code_status = fieldValues.s_code_status\r\n        ? \"\"\r\n        : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n\r\n    if (fieldValues === situationValue)\r\n      return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const {\r\n    situationValue,\r\n    backgroundValue,\r\n    assessmentValue,\r\n    recValue,\r\n    errors,\r\n    setErrors,\r\n    handleInput,\r\n    handleReset,\r\n  } = useForm(\r\n    true,\r\n    validate,\r\n    situation,\r\n    background,\r\n    assessment,\r\n    recommendation\r\n  );\r\n\r\n  let combinedValues = {};\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validate()) {\r\n      combinedValues = {\r\n        ...situationValue,\r\n        ...backgroundValue,\r\n        ...assessmentValue,\r\n        ...recValue,\r\n      };\r\n      console.log(combinedValues);\r\n\r\n      console.log(\"Submit button was pressed\");\r\n      creatNewSbarNote();\r\n    } else {\r\n      setStatus(0);\r\n      setStatusMessage(`Required fields are emtpy`);\r\n      handleClickOpen();\r\n    }\r\n  };\r\n\r\n  const creatNewSbarNote = useCallback(() => {\r\n    fetch(`https://server.wmaneesh.com/nurse/addNewSBAR/${props.patientId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(combinedValues),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        setStatus(1);\r\n        setStatusMessage(\"SBAR was successfully submitted\");\r\n        handleClickOpen();\r\n        return res.json();\r\n      } else {\r\n        setStatus(0);\r\n        setStatusMessage(\"SBAR was not submitted\");\r\n        handleClickOpen();\r\n      }\r\n    });\r\n  }, [combinedValues]);\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    situationValue.note_patient_id = parseInt(props.patientId);\r\n    situationValue.note_nurse_id = parseInt(props.nurseId);\r\n    situationValue.note_room_id = parseInt(props.roomId);\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Situation\r\n        handleInput={handleInput}\r\n        errors={errors}\r\n        nurseName={props.nurseName}\r\n        patientName={props.patientName}\r\n        situation={situationValue}\r\n        roomId={props.roomId}\r\n      />\r\n      <Background handleInput={handleInput} background={backgroundValue} />\r\n      <Assessment handleInput={handleInput} assessment={assessmentValue} />\r\n      <Recommendation handleInput={handleInput} recommendation={recValue} />\r\n\r\n      <div\r\n        className=\"button-styles\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <ButtonForm label=\"Submit\" type=\"submit\" />\r\n        <ButtonForm color=\"default\" label=\"Reset\" type=\"reset\" />\r\n        <div>\r\n          <SubmitDone\r\n            open={open}\r\n            onClose={handleClose}\r\n            status={status}\r\n            statusMessage={statusMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, makeStyles } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Header from \"../Nurse/Header\";\r\nimport Sbarfrom from \"./Sbarform.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    position: \"absolute\",\r\n    padding: \"2%\",\r\n    top: \"0\",\r\n  },\r\n}));\r\n\r\nexport default function Sbar(props) {\r\n  const param = useParams();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Header title={`Patient: ${param.patientName}`} />\r\n      <div className=\"paper-container\">\r\n        <Paper className={classes.pageContent} elevation={4}>\r\n          <Sbarfrom\r\n            nurseId={props.nurseId}\r\n            nurseName={props.nurseName}\r\n            patientName={param.patientName}\r\n            patientId={param.patientId}\r\n            roomId={param.roomId}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport { TextField, Button, Collapse, IconButton } from \"@material-ui/core\";\r\nimport ArrowDropDownCircleIcon from \"@material-ui/icons/ArrowDropDownCircle\";\r\n\r\nconst ContactPhysicanCard = (props) => {\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setRemarks(e.target.value);\r\n    console.log(remarks);\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"contactPcontainer\">\r\n      <div className=\"cardContainer\">\r\n        <div className=\"imageSpace\">\r\n          <div className=\"imageSpaceColBlock\" color=\"primary\"></div>\r\n\r\n          <div className=\"imageDiv\">\r\n            <img\r\n              className=\"AvImage\"\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/matthew.png\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"ContactContent\">\r\n          <div className=\"ContactText\">\r\n            <div className=\"ContactHeader\">{props.pname}</div>\r\n            <div className=\"ContactSpecialty\">\r\n              <span className=\"date\">{props.specialty}</span>\r\n            </div>\r\n            <div className=\"description\">{props.availability}</div>\r\n          </div>\r\n          <div className=\"ContactControlButton\">\r\n            <Collapse in={!expanded}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={handleExpandClick}\r\n              >\r\n                Request Contact\r\n              </Button>\r\n            </Collapse>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"extraContent\">\r\n          <Collapse in={expanded}>\r\n            <form className=\"remarksForm\">\r\n              <div className=\"remarksText\">\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"Additional Remarks\"\r\n                  multiline\r\n                  rows={3}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"ContactButtons\">\r\n                <div className=\"ContactCancelButton\">\r\n                  <Button\r\n                    style={{\r\n                      maxWidth: \"90px\",\r\n                      maxHeight: \"30px\",\r\n                      minWidth: \"25px\",\r\n                      minHeight: \"25px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={handleExpandClick}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n                <div className=\"ContactSubmitButton\">\r\n                  <Button\r\n                    style={{\r\n                      maxWidth: \"90px\",\r\n                      maxHeight: \"30px\",\r\n                      minWidth: \"25px\",\r\n                      minHeight: \"25px\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPhysicanCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"nurse_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Nurse Incharge\",\r\n  },\r\n  {\r\n    id: \"date_created\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Date Created\",\r\n  },\r\n  {\r\n    id: \"note_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"s_problem\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"view_sbar\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"nurse_name\" ? \"center\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          SBAR History\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n    tableLayout: \"fixed\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"patient_name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const [searchState, setSearchState] = useState([\r\n    {\r\n      sbar_note_archive_patient_id: \"-\",\r\n      nurse_name: \"-\",\r\n      sbar_note_archive_date_created: \"-\",\r\n      sbar_note_archive_room_id: \"-\",\r\n      s_problem: \"-\",\r\n    },\r\n  ]);\r\n\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      sbar_note_archive_patient_name: \"-\",\r\n      sbar_note_archive_patient_id: \"-\",\r\n      nurse_name: \"-\",\r\n      sbar_note_archive_date_created: \"-\",\r\n      sbar_note_archive_room_id: \"-\",\r\n      s_problem: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.nurseId, props.patientId);\r\n    fetch(`https://server.wmaneesh.com/nurse/SBARHistory/${props.patientId}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          console.log(result);\r\n          setPatients(result);\r\n          setSearchState(result);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchedPatients = searchState.filter((patient) =>\r\n      patient.nurse_name.toLowerCase().startsWith(props.search.toLowerCase())\r\n    );\r\n    setPatients(searchedPatients);\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={\"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patients, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        tabIndex={-1}\r\n                        key={index}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patients.nurse_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.sbar_note_archive_date_created}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.sbar_note_archive_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          {patients.s_problem}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/medmemo/nurse/viewSBAR\",\r\n                              patientName:\r\n                                patients.sbar_note_archive_patient_name,\r\n                              nurseName: patients.nurse_name,\r\n                              patientId: patients.sbar_note_archive_patient_id,\r\n                              dateCreated:\r\n                                patients.sbar_note_archive_date_created,\r\n                            }}\r\n                          >\r\n                            <Button variant=\"contained\" color=\"primary\">\r\n                              View SBAR\r\n                            </Button>\r\n                          </Link>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 25 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  ThemeProvider,\r\n  makeStyles,\r\n  createMuiTheme,\r\n  InputLabel,\r\n  TextField,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox as MuiCheckbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiFormControl-root\": {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n      verticleAlighn: \"center\",\r\n    },\r\n    \" & .MuiInputBase-input\": {\r\n      display: \"inline-block\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      display: \"inline-block\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    \"& .MuiGrid-root\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n    error: red,\r\n  },\r\n});\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles();\r\n  const { children, ...other } = props;\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <form className={classes.root} autoComplete=\"off\" {...other}>\r\n        {props.children}\r\n      </form>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport function Grid12(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function Grid6(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={6} className={classes.root}>\r\n      {props.children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport function TextFieldSingle(props) {\r\n  const { name, label, defaultValue } = props;\r\n  return (\r\n    <TextField\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      label={label}\r\n      name={name}\r\n      value={defaultValue}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Inputgroup(props) {\r\n  const { name, label, defaultValue, text } = props;\r\n  return (\r\n    <>\r\n      <InputLabel>{text}</InputLabel>\r\n      <TextField\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        label={label}\r\n        name={name}\r\n        value={defaultValue}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function Checkbox(props) {\r\n  const { name, label, defaultValue } = props;\r\n\r\n  return (\r\n    <FormControl>\r\n      <FormControlLabel\r\n        disabled={defaultValue === 1 ? false : true}\r\n        control={\r\n          <MuiCheckbox\r\n            name={name}\r\n            color=\"primary\"\r\n            checked={defaultValue === 1 ? true : false}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  label: {\r\n    textTransform: \"none\",\r\n  },\r\n}));\r\n\r\nexport function ButtonForm(props) {\r\n  const { label, size, color, variant, onClick, ...other } = props;\r\n  const buttonstyles = buttonStyles();\r\n\r\n  return (\r\n    <Button\r\n      classes={{ root: buttonstyles.root, label: buttonstyles.label }}\r\n      variant={variant || \"contained\"}\r\n      size={size || \"large\"}\r\n      color={color || \"primary\"}\r\n      onClick={onClick}\r\n      {...other}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Checkbox, Inputgroup } from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Background(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"background\">B</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The patient's mental status is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Alert and oriented to person place and time.\"\r\n              name=\"b_awareness_alert_oriented\"\r\n              defaultValue={props.background.b_awareness_alert_oriented}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Confused and cooperative.\"\r\n              name=\"b_awareness_confused_cooperative\"\r\n              defaultValue={props.background.b_awareness_confused_cooperative}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Non-cooperative, agitated or combative.\"\r\n              name=\"b_awareness_non_coop_agit_combative\"\r\n              defaultValue={\r\n                props.background.b_awareness_non_coop_agit_combative\r\n              }\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Stuporous and not talking clearly and possibly not able to swallow.\"\r\n              name=\"b_awareness_stuporous\"\r\n              defaultValue={props.background.b_awareness_stuporous}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Comatose. Eyes closed. Not responding to stimulation.\"\r\n              name=\"b_awareness_comatose\"\r\n              defaultValue={props.background.b_awareness_comatose}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Skin is:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Warm and dry\"\r\n              name=\"b_skin_warm_dry\"\r\n              defaultValue={props.background.b_skin_warm_dry}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Pale\"\r\n              name=\"b_skin_pale\"\r\n              defaultValue={props.background.b_skin_pale}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Mottled\"\r\n              name=\"b_skin_mottled\"\r\n              defaultValue={props.background.b_skin_mottled}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Diaphoretic\"\r\n              name=\"b_skin_diaphoretic\"\r\n              defaultValue={props.background.b_skin_diaphoretic}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremities are cold\"\r\n              name=\"b_skin_extremities_cold\"\r\n              defaultValue={props.background.b_skin_extremities_cold}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Checkbox\r\n              label=\"Extremities are warm\"\r\n              name=\"b_skin_extremities_warm\"\r\n              defaultValue={props.background.b_skin_extremities_warm}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              The Patient is not or is on oxygen:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"(%)\"\r\n              name=\"s_o2\"\r\n              defaultValue={props.background.b_o2_percent}\r\n              text=\"The patient has been on \"\r\n            ></Inputgroup>\r\n            <Inputgroup\r\n              label=\"(minutes)\"\r\n              name=\"b_o2_time\"\r\n              defaultValue={props.background.b_o2_time}\r\n              text=\"For how long:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The oximeter does not detect a good puslse and is giving erratic readings.\"\r\n              name=\"b_oximeter_detection\"\r\n              defaultValue={props.background.b_oximeter_detection}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Background;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport {\r\n  Grid12,\r\n  TextFieldSingle,\r\n  Inputgroup,\r\n  Checkbox,\r\n} from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Situation(props) {\r\n  const { nurseName } = props;\r\n\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"situation\">S</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Nurse Name\"\r\n              name=\"nurseId\"\r\n              defaultValue={nurseName}\r\n              text=\"This is\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Inputgroup\r\n              label=\"Room Number\"\r\n              name=\"note_room_id\"\r\n              defaultValue={props.situation.sbar_note_archive_room_id}\r\n              text=\"I'm calling from\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Patient name and location\"\r\n              name=\"note_patient_id\"\r\n              defaultValue={props.situation.sbar_note_archive_patient_name}\r\n              text=\"I'm calling about: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Code status\"\r\n              name=\"s_code_status\"\r\n              defaultValue={props.situation.s_code_status}\r\n              text=\"The Patient's code status is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"s_problem\"\r\n              defaultValue={props.situation.s_problem}\r\n              text=\"The problem I am calling about is: \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid item lg={4} xl={4}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              I have assessed the patient personaly: Vital signs are:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Blood Pressure\"\r\n              name=\"s_BP\"\r\n              defaultValue={props.situation.s_BP}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Pulse\"\r\n              name=\"s_pulse\"\r\n              defaultValue={props.situation.s_pulse}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Respiration\"\r\n              name=\"s_respiration\"\r\n              defaultValue={props.situation.s_respiration}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <TextFieldSingle\r\n              label=\"Temperature\"\r\n              name=\"s_temperature\"\r\n              defaultValue={props.situation.s_temperature}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} xl={3}>\r\n            <TextFieldSingle\r\n              label=\"O2 sat\"\r\n              name=\"s_o2\"\r\n              defaultValue={props.situation.s_o2}\r\n            />\r\n          </Grid>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              I am concerned about the:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Blood pressure because it is less than 90 or 30 mmHg below usual.\"\r\n              name=\"s_concern_bp\"\r\n              defaultValue={props.situation.s_concern_bp}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Pulse because it is over 125 or less than 45.\"\r\n              name=\"s_concern_pulse\"\r\n              defaultValue={props.situation.s_concern_pulse}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Respiration because it is less than 10 or over 30.\"\r\n              name=\"s_concern_respiration\"\r\n              defaultValue={props.situation.s_concern_respiration}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"Temperature because it is less than 96 or over 104.\"\r\n              name=\"s_concern_temperature\"\r\n              defaultValue={props.situation.s_concern_temperature}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Checkbox\r\n              label=\"O2 Sat because it is <90% despite oxygen.\"\r\n              name=\"s_concern_o2\"\r\n              defaultValue={props.situation.s_concern_o2}\r\n            ></Checkbox>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Situation;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Assessment(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"assessment\">A</div>\r\n      <Paper className={paperstyle.pageContent} elevation={5}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Inputgroup\r\n              label=\"Problem\"\r\n              name=\"a_problem\"\r\n              defaultValue={props.assessment.a_problem}\r\n              text=\"This is what I think the problem is:\"\r\n            ></Inputgroup>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <InputLabel style={{ width: \"100%\" }}>\r\n              The problem seems to be related to:\r\n            </InputLabel>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Cardiac\"\r\n              name=\"a_problem_cardiac\"\r\n              defaultValue={props.assessment.a_problem_cardiac}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Infections\"\r\n              name=\"a_problem_infection\"\r\n              defaultValue={props.assessment.a_problem_infection}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Neurological\"\r\n              name=\"a_problem_neurologic\"\r\n              defaultdefaultValue={props.assessment.a_problem_neurologic}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid item lg={4} xl={2}>\r\n            <Checkbox\r\n              label=\"Respitory\"\r\n              name=\"a_problem_respitory\"\r\n              defaultValue={props.assessment.a_problem_respitory}\r\n            ></Checkbox>\r\n          </Grid>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am not sure what the problem is but the patient is deteriorating.\"\r\n              name=\"a_problem_unsure_deterioriating\"\r\n              defaultValue={props.assessment.a_problem_unsure_deterioriating}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"The patient seems to be unstable, we need to do something.\"\r\n              name=\"a_unstable\"\r\n              defaultValue={props.assessment.a_unstable}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"I am afraid the patient may arrest.\"\r\n              name=\"a_arrest\"\r\n              defaultValue={props.assessment.a_arrest}\r\n            ></Checkbox>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assessment;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, InputLabel } from \"@material-ui/core\";\r\nimport { Grid12, Inputgroup, Checkbox } from \"./UseFormView.js\";\r\n\r\nconst paperStyle = makeStyles((theme) => ({\r\n  pageContent: {\r\n    marginLeft: \"2%\",\r\n    marginBottom: \"50px\",\r\n    padding: \"2%\",\r\n  },\r\n}));\r\n\r\nfunction Recommendation(props) {\r\n  const paperstyle = paperStyle();\r\n\r\n  return (\r\n    <div className=\"paper-situation\">\r\n      <div className=\"recommendation\">R</div>\r\n      <Paper className={paperstyle.pageContent} elevation={6}>\r\n        <Grid container>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"What needs to be done\"\r\n              name=\"r_request\"\r\n              defaultValue={props.recommendation.r_request}\r\n              text=\"I request that you  \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"Priority scale\"\r\n              name=\"r_priority\"\r\n              defaultValue={props.recommendation.r_priority}\r\n              text=\"Priority of the condition from a scale of 1-3: 1 being the least and 3 being the most \"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Checkbox\r\n              label=\"Talk to the patient or family about code status.\"\r\n              name=\"r_patient_family_code_status\"\r\n              defaultValue={props.recommendation.r_patient_family_code_status}\r\n            ></Checkbox>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"CXR, ABG, EKG, CBC, or BMP\"\r\n              name=\"r_test_needed\"\r\n              defaultValue={props.recommendation.r_test_needed}\r\n              text=\"Are any tests needed:\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <InputLabel\r\n              style={{ fontSize: \"1.2rem\", fontWeight: \"700\", margin: \"20px\" }}\r\n            >\r\n              If a change in treatment is ordered then ask:\r\n            </InputLabel>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"frequency\"\r\n              name=\"r_freq_vital_signs\"\r\n              defaultValue={props.recommendation.r_freq_vital_signs}\r\n              text=\"How often do you want vital signs taken?\"\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"How long do you expect this problem will last?\"\r\n              name=\"r_time_problem_will_last\"\r\n              defaultValue={props.recommendation.r_time_problem_will_last}\r\n            ></Inputgroup>\r\n          </Grid12>\r\n          <Grid12>\r\n            <Inputgroup\r\n              label=\"If the patient does not get better when would you want us to call again?\"\r\n              name=\"r_problem_persist_contact\"\r\n              defaultValue={props.recommendation.r_problem_persist_contact}\r\n            ></Inputgroup>\r\n          </Grid12>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recommendation;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Background from \"./Background.js\";\r\nimport Situation from \"./Situation.js\";\r\nimport Assessment from \"./Assessment.js\";\r\nimport Recommendation from \"./Recommendation.js\";\r\nimport { ButtonForm, useForm, Form } from \"./UseFormView.js\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\n\r\n//CHECK NULL FIELDS TO SEE IF YOU CAN JUST MAKE THEM EMPTY STRINGS. MYSQL DOESNT LIKE NULL\r\nconst situation = {\r\n  sbar_note_archive_patient_id: \"\",\r\n  sbar_note_archive_patient_name: \"\",\r\n  sbar_note_archive_room_id: \"\",\r\n  sbar_note_archive_date_created: \"\",\r\n  s_problem: \"\",\r\n  s_code_status: \"\",\r\n  s_BP: \"\",\r\n  s_pulse: \"\",\r\n  s_respiration: \"\",\r\n  s_temperature: \"\",\r\n  s_o2: \"\",\r\n  s_concern_bp: \"\",\r\n  s_concern_pulse: \"\",\r\n  s_concern_temperature: \"\",\r\n  s_concern_o2: \"\",\r\n  s_concern_respiration: \"\",\r\n};\r\n\r\nconst background = {\r\n  b_awareness_alert_oriented: \"\",\r\n  b_awareness_confused_cooperative: \"\",\r\n  b_awareness_non_coop_agit_combative: \"\",\r\n  b_awareness_lethargic: \"\",\r\n  b_awareness_stuporous: \"\",\r\n  b_awareness_comatose: \"\",\r\n  b_skin_warm_dry: \"\",\r\n  b_skin_pale: \"\",\r\n  b_skin_mottled: \"\",\r\n  b_skin_diaphoretic: \"\",\r\n  b_skin_extremities_cold: \"\",\r\n  b_skin_extremities_warm: \"\",\r\n  b_o2_percent: \"\",\r\n  b_o2_time: \"\",\r\n  b_oximeter_detection: \"\",\r\n};\r\n\r\nconst assessment = {\r\n  a_problem: \"\",\r\n  a_problem_cardiac: \"\",\r\n  a_problem_infection: \"\",\r\n  a_problem_neurologic: \"\",\r\n  a_problem_respitory: \"\",\r\n  a_problem_unsure_deterioriating: \"\",\r\n  a_unstable: \"\",\r\n  a_arrest: \"\",\r\n};\r\n\r\nconst recommendation = {\r\n  r_request: \"\",\r\n  r_priority: \"\",\r\n  r_patient_family_code_status: \"\",\r\n  r_test_needed: \"\",\r\n  r_freq_vital_signs: \"\",\r\n  r_time_problem_will_last: \"\",\r\n  r_problem_persist_contact: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function ViewSbarForm(props) {\r\n  const [situationValue, setSituationValue] = useState(situation);\r\n  const [backgroundValue, setBackgroundValue] = useState(background);\r\n  const [assessmentValue, setAssessmentValue] = useState(assessment);\r\n  const [recValue, setRecValue] = useState(recommendation);\r\n\r\n  const [loadingSbarStatus, setLoadingSbarStatus] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    console.log(props.dateCreated, props.patientId);\r\n    fetch(\r\n      `https://server.wmaneesh.com/nurse/getSBARHistoryFields/${props.dateCreated}/${props.patientId}`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        //console.log(result);\r\n        if (result !== undefined && result[0] !== 0) {\r\n          for (let [key, value] of Object.entries(result[0])) {\r\n            //console.log(`${key}: ${value}`);\r\n            if (key.charAt(0) === \"s\") {\r\n              setSituationValue((prevSituationValue) => {\r\n                return { ...prevSituationValue, [key]: value };\r\n              });\r\n              // console.log(situationValue);\r\n            } else if (key.charAt(0) === \"b\") {\r\n              setBackgroundValue((prevBackgroundValue) => {\r\n                return { ...prevBackgroundValue, [key]: value };\r\n              });\r\n            } else if (key.charAt(0) === \"a\") {\r\n              setAssessmentValue((prevAssessmentValue) => {\r\n                return { ...prevAssessmentValue, [key]: value };\r\n              });\r\n            } else if (key.charAt(0) === \"r\") {\r\n              setRecValue((prevRecValue) => {\r\n                return { ...prevRecValue, [key]: value };\r\n              });\r\n            }\r\n          }\r\n          setLoadingSbarStatus(true);\r\n        }\r\n      });\r\n    // Update the document title using the browser API\r\n    //situation.sbar_note_archive_patient_id = parseInt(props.patientId);\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      {!loadingSbarStatus ? (\r\n        <div className={classes.root}>\r\n          <CircularProgress\r\n            style={{ position: \"fixed\", top: \"30%\", left: \"50%\" }}\r\n            size={200}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Form>\r\n          <div>\r\n            <Situation\r\n              nurseName={props.nurseName}\r\n              patientName={props.patientName}\r\n              situation={situationValue}\r\n            />\r\n            <Background background={backgroundValue} />\r\n            <Assessment assessment={assessmentValue} />\r\n            <Recommendation recommendation={recValue} />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, makeStyles } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Header from \"../../Nurse/Header\";\r\nimport ViewSbarForm from \"./ViewSbarForm.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    position: \"absolute\",\r\n    padding: \"2%\",\r\n    top: \"0\",\r\n  },\r\n}));\r\n\r\nexport default function ViewSbar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Header title={`Patient: ${props.patientName}`} />\r\n      <Header title={`Created on: ${props.dateCreated}`} />\r\n      <div className=\"paper-container-1\">\r\n        <Paper className={classes.pageContent} elevation={4}>\r\n          <ViewSbarForm\r\n            patientId={props.patientId}\r\n            nurseName={props.nurseName}\r\n            dateCreated={props.dateCreated}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../NavBar/NavBar.js\";\r\nimport PatientTable from \"./PatientTable.js\";\r\nimport Header from \"./Header\";\r\nimport Sbar from \"../Sbar/Sbar.js\";\r\n// import CreatePatient from \"../CreatePatient/CreatePatient.js\";\r\nimport ContactPhysicanCard from \"./ContactPhysicianCard.js\";\r\nimport HistoryTable from \"./HistoryTable.js\";\r\n\r\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/\";\r\n\r\nimport ViewSbar from \"../Sbar/ViewSbar/ViewSbar.js\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#33bbb3\",\r\n    },\r\n  },\r\n});\r\n\r\nconst NursePage = (props) => {\r\n  const [nurseId, setNurseId] = useState(\"\");\r\n  const [nurseName, setNurseName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // setNurseId(props.userToken);\r\n    fetch(`https://server.wmaneesh.com/nurse/getId/${props.userToken}`, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined && result.length !== 0) {\r\n          setNurseId(result[0].nurse_id);\r\n          setNurseName(result[0].nurse_name);\r\n        }\r\n      });\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n        setAuthenticate={props.setAuthenticate}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/medmemo/nurse\">\r\n          <Header title={`Hi ${nurseName}`} />\r\n          <MuiThemeProvider theme={theme}>\r\n            <PatientTable search={props.search} nurseId={nurseId} />\r\n          </MuiThemeProvider>\r\n        </Route>\r\n\r\n        <Route path=\"/medmemo/nurse/SBARhistory/:patientName\">\r\n          <Header title={`SBAR History of ${props.location.patientName}`} />\r\n          <MuiThemeProvider theme={theme}>\r\n            <div className=\"historyContainer\">\r\n              <HistoryTable\r\n                search={props.search}\r\n                nurseId={nurseId}\r\n                patientName={props.location.patientName}\r\n                patientId={props.location.patientId}\r\n              />\r\n              <ContactPhysicanCard\r\n                pname=\"Dr. Geneva\"\r\n                specialty=\"Neurology\"\r\n                availability=\"Away on vacation\"\r\n              />\r\n            </div>\r\n          </MuiThemeProvider>\r\n        </Route>\r\n\r\n        <Route exact path=\"/medmemo/nurse/contactPhysician\">\r\n          {/* ------------------ Temporarily routed here -------------------------*/}\r\n          <ContactPhysicanCard\r\n            pname=\"Dr. Geneva\"\r\n            specialty=\"Neurology\"\r\n            availability=\"Away on vacation\"\r\n          />\r\n        </Route>\r\n        {/* <Route exact path=\"/nurse/add-patient\">\r\n          <CreatePatient />\r\n        </Route> */}\r\n\r\n        <Route exact path=\"/medmemo/nurse/:patientName/:patientId/:roomId\">\r\n          <Sbar nurseId={nurseId} nurseName={nurseName} />\r\n        </Route>\r\n\r\n        <Route path=\"/medmemo/nurse/viewSBAR\">\r\n          <ViewSbar\r\n            nurseName={props.location.nurseName}\r\n            patientId={props.location.patientId}\r\n            patientName={props.location.patientName}\r\n            dateCreated={props.location.dateCreated}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NursePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRouteNurse = ({\r\n  authenticate,\r\n  accountType,\r\n  path,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  // console.log(authenticate);\r\n  // console.log(accountType);\r\n  // console.log(path);\r\n  let auth = false;\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"/isAuthenticated\")\r\n  //     .then((res) => {\r\n  //       if (res.ok) {\r\n  //         return res.json();\r\n  //       } else {\r\n  //         console.log(\"network response was bad\");\r\n  //       }\r\n  //     })\r\n  //     .then((result) => {\r\n  //       if (result) {\r\n  //         console.log(\"im in the protected route thing\");\r\n  //         auth = true;\r\n  //         // setAuthenticate(true);\r\n  //       } else {\r\n  //         console.log(\"im in the protected route thing\");\r\n  //         auth = false;\r\n  //         // setAuthenticate(false);\r\n  //       }\r\n  //     });\r\n  // }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticate & (accountType === path) ? (\r\n          <Component {...props} {...rest} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/medmemo/\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRouteNurse;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst ProtectedLogin = ({\r\n  authenticate,\r\n  component: Component,\r\n  accountType,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !authenticate ? (\r\n          <Component {...props} {...rest} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: `${accountType}`,\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedLogin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"patient_name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Patient Name\",\r\n  },\r\n  { id: \"a_problem\", numeric: false, disablePadding: false, label: \"Type\" },\r\n  {\r\n    id: \"note_room_id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Room Number\",\r\n  },\r\n  { id: \"r_priority\", numeric: false, disablePadding: false, label: \"Urgency\" },\r\n  {\r\n    id: \"view_history\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Last Updated\",\r\n  },\r\n\r\n  {\r\n    id: \"nurse\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Nurse\",\r\n  },\r\n  {\r\n    id: \"SBAR_history\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"SBAR history\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          {/* <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          /> */}\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.id !== \"patient_name\" ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(5),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.primary.main,\r\n          backgroundColor: lighten(theme.palette.primary.main, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.secondary,\r\n          backgroundColor: theme.palette.primary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: \"2rem\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected, name } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          Loading {name} SBAR...\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Patient List\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontSize: \"5rem\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    fontSize: \"5rem\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"patient_name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const history = useHistory();\r\n\r\n  const [patients, setPatients] = useState([\r\n    {\r\n      patient_name: \"-\",\r\n      a_problem: \"-\",\r\n      note_room_id: \"-\",\r\n      r_priority: \"-\",\r\n      update_status: \"-\",\r\n      last_updated: \"-\",\r\n      nurse: \"placeholder\",\r\n      SBAR_history: \"-\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (props.search === \"\") {\r\n      fetch(`https://159.203.29.156/nurse/viewPatients/1`)\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          } else {\r\n            console.log(\"network response was bad\");\r\n          }\r\n        })\r\n        .then((result) => {\r\n          if (result !== undefined && result.length !== 0) {\r\n            setPatients(result);\r\n          }\r\n        });\r\n    } else {\r\n      const searchedPatients = patients.filter((patient) =>\r\n        patient.patient_name\r\n          .toLowerCase()\r\n          .startsWith(props.search.toLowerCase())\r\n      );\r\n      setPatients(searchedPatients);\r\n\r\n      // patients\r\n      //   .filter((patient) => patient.patient_name.includes(props.search))\r\n      //   .map((filteredPatient) => setPatients(filteredPatient));\r\n    }\r\n  }, [props.search]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((n) => n.patient_name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    setPatientName(name);\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setPatientName(name);\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selected.length > 0) {\r\n      setTimeout(function () {\r\n        //your code to be executed after 1 second\r\n        history.push(`/nurse/${patientName}`);\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, patients.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        heigh: \"100%\",\r\n        top: \"300px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        <Paper className={classes.paper} elevation={4}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            name={patientName}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={patients.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(patients, getComparator(order, orderBy)).map(\r\n                  (patients, index) => {\r\n                    const isItemSelected = isSelected(patients.patient_name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role={\"checkbox\"}\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={patients.patient_name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"patients\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {patients.patient_name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {patients.a_problem}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {patients.note_room_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {patients.r_priority}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {patients.update_status}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{patients.nurse}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button variant=\"contained\" color=\"primary\">\r\n                            View SBAR History\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PhysicianPatientTable from \"./PatientTableTemplate\";\r\n\r\nclass PhysicianPatientList extends React.Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PhysicianPatientTable search={this.props.search} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhysicianPatientList;\r\n","import { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core/\";\r\nimport React, { useState } from \"react\";\r\nimport PhysicianPatientList from \"./PhysicianPatientList\";\r\nimport Navigation from \"../NavBar/NavBar.js\";\r\n\r\n//import PHeader from './PHeader';\r\n///import ContactPhysicianCard from \"../Nurse/ContactPhysicanCard\"; //temperarily\r\n\r\nimport Header from \"../Nurse/Header\";\r\n\r\nconst PhysicianDashBoard = (props) => {\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n        setAuthenticate={props.setAuthenticate}\r\n      />\r\n      <Switch>\r\n        {/* <Route exact path=\"/physician\">\r\n          <Header title=\"DashBoard\" />\r\n          <div className=\"dButtons\">\r\n            <Link to=\"/physician/patient-list\">\r\n              <div className=\"patientList_button\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\"pl_button\"\r\n                  style={{ fontSize: \"1.5rem\" }}\r\n                >\r\n                  Patient List\r\n                </Button>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          {/* <ContactPhysicianCard /> */}\r\n        {/* </Route> */} */\r\n        <Route exact path=\"/medmemo/physician\">\r\n          <Header title=\"Dr. --Physician Name--\" />\r\n          <PhysicianPatientList search={props.search} />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhysicianDashBoard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faStethoscope,\r\n  faUserNurse,\r\n  faUserInjured,\r\n  faChild,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faStethoscope, faUserNurse, faUserInjured, faChild, faUnlockAlt);\r\n\r\nconst DashboardButton = (props) => {\r\n  const [color, setColor] = useState(\"\");\r\n  const [iconUsed, setIconUsed] = useState(\"\");\r\n\r\n  var bgColors = {\r\n    Physician: \"#81b71a\",\r\n    Nurse: \"#00B1E1\",\r\n    Patient: \"#37BC9B\",\r\n    Family: \"#E18029\",\r\n    Unlock: \"#B22E44\",\r\n  };\r\n\r\n  const choose = () => {\r\n    if (props.title === \"Physician\") {\r\n      setColor(bgColors.Physician);\r\n      setIconUsed(faStethoscope);\r\n    } else if (props.title === \"Nurse\") {\r\n      setColor(bgColors.Nurse);\r\n      setIconUsed(faUserNurse);\r\n    } else if (props.title === \"Patient\") {\r\n      setColor(bgColors.Patient);\r\n      setIconUsed(faUserInjured);\r\n    } else if (props.title === \"Visitor\") {\r\n      setColor(bgColors.Family);\r\n      setIconUsed(faChild);\r\n    } else {\r\n      setColor(bgColors.Unlock);\r\n      setIconUsed(faUnlockAlt);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    choose();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"adminDashboardButtonContainer\">\r\n      <Link\r\n        to={`/medmemo/admin/${props.title}`}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <div\r\n          className=\"adminbuttonContainer\"\r\n          style={{ backgroundColor: `${color}` }}\r\n        >\r\n          <div className=\"containerbuttonicon\">\r\n            <div className=\"DashboardButtonicon\">\r\n              <FontAwesomeIcon\r\n                className=\"adminuser-icon\"\r\n                icon={iconUsed}\r\n                color={color}\r\n              />\r\n            </div>\r\n          </div>\r\n          {props.title !== \"Unlock\" ? (\r\n            <div className=\"adminDashboardButtonContent\">\r\n              <div className=\"adminDashboardButtonName\">{`Create ${props.title} Account`}</div>\r\n              <div className=\"accountCounter\">\r\n                <div className=\"adminDashboardButtonCount\">{`${props.count} ${props.title}s`}</div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"adminDashboardButtonContent\">\r\n              <div className=\"adminDashboardButtonName\">{`${props.title} Accounts`}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardButton;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\n\r\nconst GeneralCreatePage = (props) => {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <div>\r\n      <label className=\"cpLabel\">\r\n        {props.title}\r\n        <input {...field} {...props} />\r\n        <div>\r\n          {meta.error && meta.touched && (\r\n            <p className={\"error\"}>{meta.error}</p>\r\n          )}\r\n        </div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Testing 123 Testing \r\n\r\nexport default GeneralCreatePage;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  token: yup.string().required(\"Token is required*\"),\r\n  password: yup.string().required(\"Password is required*\"),\r\n  fname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"First Name is required*\"),\r\n  lname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"Last Name is required*\"),\r\n  department: yup.string().required(\"Department is required*\"),\r\n  specialty: yup.string().required(\"Specialty is required*\"),\r\n});\r\nclass CreatePatient extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.state = {\r\n      open: false,\r\n      status: 0,\r\n      statusMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState(() => ({ open: true }));\r\n    // this.setState.open = true;\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    this.setState(() => ({ open: false }));\r\n  };\r\n\r\n  handleSubmit = (data) => {\r\n    fetch(`https://server.wmaneesh.com/admin/addNurse`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 1 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"Nurse account was successfully created\",\r\n        }));\r\n        return res.json();\r\n      } else {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 0 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"There was an error creating the nurse account\",\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          token: \"\",\r\n          password: \"\",\r\n          fname: \"\",\r\n          lname: \"\",\r\n          department: \"\",\r\n          specialty: \"\",\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={(data) => this.handleSubmit(data)}\r\n      >\r\n        {({ handleSubmit }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <section className=\"patientForm\">\r\n                <div className=\"promptMessage\">\r\n                  <h3>Please Enter the Following Information:</h3>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Token\"}\r\n                  name={\"token\"}\r\n                  placeholder={\"Token\"}\r\n                  className=\"token cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Password\"}\r\n                  name={\"password\"}\r\n                  placeholder={\"Password\"}\r\n                  className=\"password cpInput\"\r\n                />\r\n\r\n                <div className=\"full-name\">\r\n                  <div className=\"first-name\">\r\n                    <GeneralCreatePage\r\n                      title={\"First Name\"}\r\n                      name={\"fname\"}\r\n                      placeholder={\"First Name\"}\r\n                      className=\"firstName cpInput\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"last-name\">\r\n                    <GeneralCreatePage\r\n                      title={\"Last Name\"}\r\n                      name={\"lname\"}\r\n                      placeholder={\"Last Name\"}\r\n                      className=\"lastName cpInput\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Department\"}\r\n                  name={\"department\"}\r\n                  placeholder={\"Department\"}\r\n                  className=\"department cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Specialty\"}\r\n                  name={\"specialty\"}\r\n                  placeholder={\"Specialty\"}\r\n                  className=\"specialty cpInput\"\r\n                />\r\n\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons-submit\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                        Submit\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"buttons-cancel\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                        Cancel\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <SubmitDone\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    status={this.state.status}\r\n                    statusMessage={this.state.statusMessage}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePatient;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  token: yup.string().required(\"Token is required*\"),\r\n  password: yup.string().required(\"Password is required*\"),\r\n  fname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"First Name is required*\"),\r\n  lname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"Last Name is required*\"),\r\n  specialty: yup.string().required(\"Specialty is required*\"),\r\n});\r\nclass CreatePatient extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.state = {\r\n      open: false,\r\n      status: 0,\r\n      statusMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState(() => ({ open: true }));\r\n    // this.setState.open = true;\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    this.setState(() => ({ open: false }));\r\n  };\r\n\r\n  handleSubmit = (data) => {\r\n    console.log(\"feth is called?\");\r\n    fetch(`https://server.wmaneesh.com/admin/addPhysician`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 1 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"Physician account was successfully created\",\r\n        }));\r\n        return res.json();\r\n      } else {\r\n        this.handleClickOpen();\r\n        this.setState(() => ({ status: 0 }));\r\n        this.setState(() => ({\r\n          statusMessage: \"There was an error creating the physician account\",\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          token: \"\",\r\n          password: \"\",\r\n          fname: \"\",\r\n          lname: \"\",\r\n          department: \"\",\r\n          specialty: \"\",\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={(data) => this.handleSubmit(data)}\r\n      >\r\n        {({ handleSubmit }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <section className=\"patientForm\">\r\n                <div className=\"promptMessage\">\r\n                  <h3>Please Enter the Following Information:</h3>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Token\"}\r\n                  name={\"token\"}\r\n                  placeholder={\"Token\"}\r\n                  className=\"token cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Password\"}\r\n                  name={\"password\"}\r\n                  placeholder={\"Password\"}\r\n                  className=\"password cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"First Name\"}\r\n                  name={\"fname\"}\r\n                  placeholder={\"First Name\"}\r\n                  className=\"firstName cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Last Name\"}\r\n                  name={\"lname\"}\r\n                  placeholder={\"Last Name\"}\r\n                  className=\"lastName cpInput\"\r\n                />\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Specialty\"}\r\n                  name={\"specialty\"}\r\n                  placeholder={\"Specialty\"}\r\n                  className=\"specialty cpInput\"\r\n                />\r\n\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons-submit\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                        Submit\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"buttons-cancel\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                        Cancel\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <SubmitDone\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    status={this.state.status}\r\n                    statusMessage={this.state.statusMessage}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePatient;\r\n","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  fname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"First Name is required*\"),\r\n  lname: yup\r\n    .string()\r\n    .matches(/^[a-zA-Z ]+$/, \"Name cannot contain a number\")\r\n    .required(\"Last Name is required*\"),\r\n  admissionDate: yup.string().required(\"Admission Date is required*\"),\r\n  dateOfBirth: yup.string().required(\"Date of Birth is required*\"),\r\n  weight: yup.number().required(\"Weight is required*\"),\r\n  height: yup.number().required(\"Height is required*\"),\r\n  patient_id: yup.string().required(\"Patient ID is required*\"),\r\n  physician_id: yup.number().required(\"Physician ID is required*\"),\r\n  nurse_id: yup.number().required(\"Nurse ID is required*\"),\r\n  room_id: yup.number().required(\"Room number is required*\"),\r\n});\r\n\r\nexport default function CreatePatient(props) {\r\n  const [open, setOpen] = useState(false); //for modal\r\n  const [status, setStatus] = useState(0);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (data) => {\r\n    fetch(`https://server.wmaneesh.com/admin/addPatient`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result !== undefined && result.affectedRows === 1) {\r\n          handleClickOpen();\r\n          setStatus(1);\r\n          setStatusMessage(\"Patient account was successfully created\");\r\n        } else {\r\n          handleClickOpen();\r\n          setStatus(0);\r\n          setStatusMessage(\"There was an error creating the patient account\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        patient_id: \"\",\r\n        fname: \"\",\r\n        lname: \"\",\r\n        admissionDate: \"\",\r\n        dateOfBirth: \"\",\r\n        weight: \"\",\r\n        height: \"\",\r\n        nurse_id: \"\",\r\n        physician_id: \"\",\r\n        room_id: \"\",\r\n      }}\r\n      validationSchema={formSchema}\r\n      onSubmit={(data) => handleSubmit(data)}\r\n    >\r\n      {({ handleSubmit }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <section className=\"patientForm\">\r\n              <div className=\"promptMessage\">\r\n                <h3>Please Enter the Following Information:</h3>\r\n              </div>\r\n              <div className=\"full-name\">\r\n                <div className=\"first-name\">\r\n                  <GeneralCreatePage\r\n                    title={\"First Name\"}\r\n                    name={\"fname\"}\r\n                    placeholder={\"First Name\"}\r\n                    className=\"firstName cpInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"last-name\">\r\n                  <GeneralCreatePage\r\n                    title={\"Last Name\"}\r\n                    name={\"lname\"}\r\n                    placeholder={\"Last Name\"}\r\n                    className=\"lastName cpInput\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <GeneralCreatePage\r\n                title={\"Date of Birth\"}\r\n                name={\"dateOfBirth\"}\r\n                type=\"date\"\r\n                className=\"dateOfBirth cpInput\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Admission Date\"}\r\n                name={\"admissionDate\"}\r\n                type=\"date\"\r\n                className=\"admissionDate cpInput\"\r\n              />\r\n\r\n              <div className=\"weight-height\">\r\n                <div className=\"weight\">\r\n                  <GeneralCreatePage\r\n                    title={\"Weight\"}\r\n                    name={\"weight\"}\r\n                    placeholder={\"0.0\"}\r\n                    type=\"number\"\r\n                    className=\"weightField cpInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"height\">\r\n                  <GeneralCreatePage\r\n                    title={\"Height\"}\r\n                    name={\"height\"}\r\n                    placeholder={\"0.0\"}\r\n                    type=\"number\"\r\n                    className=\"weightField cpInput\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <GeneralCreatePage\r\n                title={\"Patient ID (Personal ID)\"}\r\n                name={\"patient_id\"}\r\n                type=\"text\"\r\n                className=\"patient_id cpInput\"\r\n                placeholder=\"Patient ID\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Physician ID\"}\r\n                name={\"physician_id\"}\r\n                type=\"text\"\r\n                className=\"physician_id cpInput\"\r\n                placeholder=\"Physician ID\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Nurse ID\"}\r\n                name={\"nurse_id\"}\r\n                type=\"text\"\r\n                className=\"nurse_id cpInput\"\r\n                placeholder=\"Nurse ID\"\r\n              />\r\n              <GeneralCreatePage\r\n                title={\"Room Number\"}\r\n                name={\"room_id\"}\r\n                type=\"text\"\r\n                className=\"room_id cpInput\"\r\n                placeholder=\"Room Number\"\r\n              />\r\n\r\n              <div className=\"buttons\">\r\n                <div className=\"buttons-submit\">\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                      Submit\r\n                    </a>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"buttons-cancel\">\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                      Cancel\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <SubmitDone\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  status={status}\r\n                  statusMessage={statusMessage}\r\n                />\r\n              </div>\r\n            </section>\r\n          </form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport GeneralCreatePage from \"./GeneralCreatePage.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubmitDone from \"../Modal/SubmitDone\";\r\n\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  token: yup.string().required(\"Token is required*\"),\r\n});\r\nclass UnlockAccounts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.state = {\r\n      open: false,\r\n      status: 0,\r\n      statusMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState(() => ({ open: true }));\r\n  };\r\n\r\n  handleClose = (value) => {\r\n    this.setState(() => ({ open: false }));\r\n  };\r\n\r\n  handleSubmit = (data) => {\r\n    console.log(\"etch is called\");\r\n    fetch(`https://server.wmaneesh.com/admin/unlockAccount`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== undefined) {\r\n          if (result[0] === \"S\") {\r\n            this.setState(() => ({ status: 1 }));\r\n            this.setState(() => ({\r\n              statusMessage: result,\r\n            }));\r\n            this.handleClickOpen();\r\n          } else {\r\n            this.setState(() => ({ status: 0 }));\r\n            this.setState(() => ({\r\n              statusMessage: result,\r\n            }));\r\n            this.handleClickOpen();\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          token: \"\",\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={(data) => this.handleSubmit(data)}\r\n      >\r\n        {({ handleSubmit }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <section className=\"patientForm\">\r\n                <div className=\"promptMessage\">\r\n                  <h3>Please Enter the Token to unlock the account:</h3>\r\n                </div>\r\n\r\n                <GeneralCreatePage\r\n                  title={\"Token\"}\r\n                  name={\"token\"}\r\n                  placeholder={\"Token\"}\r\n                  className=\"token cpInput\"\r\n                />\r\n                <div className=\"buttons\">\r\n                  <div className=\"buttons-submit\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      <a className=\"Button-text\" className=\"Button-text subBut\">\r\n                        Submit\r\n                      </a>\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"buttons-cancel\">\r\n                    <Button variant=\"contained\" color=\"secondary\">\r\n                      <Link to=\"/medmemo/admin\" className=\"Button-text cancBut\">\r\n                        Cancel\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <SubmitDone\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    status={this.state.status}\r\n                    statusMessage={this.state.statusMessage}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnlockAccounts;\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../NavBar/NavBar.js\";\r\nimport DashboardButton from \"./DashboardButton\";\r\nimport PatientTable from \"../Nurse/PatientTable.js\";\r\nimport CreateNurse from \"../createNewUser/CreateNurse.js\";\r\nimport CreatePhysician from \"../createNewUser/CreatePhysician.js\";\r\nimport CreatePatient from \"../createNewUser/CreatePatient.js\";\r\nimport UnlockAccount from \"../createNewUser/UnlockAccount.js\";\r\n\r\nimport { Button, createMuiTheme, MuiThemeProvider } from \"@material-ui/core/\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#5bc8c2\",\r\n      main: \"#33bbb3\",\r\n      dark: \"#23827d\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Admin = (props) => {\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setRemarks(e.target.value);\r\n    console.log(remarks);\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        search={props.search}\r\n        setSearch={props.setSearch}\r\n        setAuthenticate={props.setAuthenticate}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/medmemo/admin\">\r\n          <section className=\"page\">\r\n            <div className=\"admin-button\">\r\n              <DashboardButton title=\"Patient\" count=\"200\" />\r\n              <DashboardButton title=\"Nurse\" count=\"50\" />\r\n              <DashboardButton title=\"Physician\" count=\"30\" />\r\n              <DashboardButton title=\"Visitor\" count=\"320\" />\r\n              <DashboardButton title=\"Unlock\" count=\"-\" />\r\n            </div>\r\n            {/* <div className=\"admin-table\">\r\n              <MuiThemeProvider theme={theme}>\r\n                <PatientTable search={props.search} />\r\n              </MuiThemeProvider>\r\n            </div> */}\r\n          </section>\r\n        </Route>\r\n        <MuiThemeProvider theme={theme}>\r\n          <Route exact path=\"/medmemo/admin/Patient\">\r\n            <CreatePatient />\r\n          </Route>\r\n\r\n          <Route exact path=\"/medmemo/admin/Nurse\">\r\n            <CreateNurse />\r\n          </Route>\r\n\r\n          <Route exact path=\"/medmemo/admin/Physician\">\r\n            <CreatePhysician />\r\n          </Route>\r\n\r\n          <Route exact path=\"/medmemo/admin/unlock\">\r\n            <UnlockAccount />\r\n          </Route>\r\n        </MuiThemeProvider>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useLocation,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport {\r\n  Button,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\n\r\n//import styles\r\nimport \"./Styles/app.scss\";\r\n//import components\r\nimport Login from \"./Components/Login/Login.js\";\r\nimport NursePage from \"./Components/Nurse/NursePage.js\";\r\nimport ProtectedRoute from \"./Components/Routes/ProtectedRoute.js\";\r\nimport ProtectedLogin from \"./Components/Routes/ProtectedLogin.js\";\r\nimport Physician from \"./Components/Physician/PhysicianDashboard.js\";\r\nimport Admin from \"./Components/Admin/Admin.js\";\r\n// import \"./Components/firebase/firebase.js\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [accountType, setAccountType] = useState(\"\");\r\n  const [authenticate, setAuthenticate] = useState(false);\r\n  const [userToken, setUserToken] = useState(\"\");\r\n  //\"proxy\": \"https://159.203.29.156:443\",\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://server.wmaneesh.com/isAuthenticated\", {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          console.log(\"network response was bad\");\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result !== \"\") {\r\n          setAccountType(`/medmemo${result.path}`);\r\n          setAuthenticate(true);\r\n          setUserToken(result.user);\r\n        } else {\r\n          setAuthenticate(false);\r\n          setAccountType(\"/medmemo/\");\r\n          setUserToken(\"\");\r\n        }\r\n      });\r\n  }, [accountType, authenticate]);\r\n\r\n  const themes = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: \"#5bc8c2\",\r\n        main: \"#33bbb3\",\r\n        dark: \"#23827d\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {accountType !== \"\" ? (\r\n          <Switch>\r\n            <ProtectedRoute\r\n              path=\"/medmemo/nurse\"\r\n              component={NursePage}\r\n              search={search}\r\n              setSearch={setSearch}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              userToken={userToken}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/medmemo/physician\"\r\n              component={Physician}\r\n              search={search}\r\n              setSearch={setSearch}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              userToken={userToken}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/medmemo/admin\"\r\n              component={Admin}\r\n              search={search}\r\n              setSearch={setSearch}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              pname=\"Dr. Geneva\"\r\n              specialty=\"Neurology\"\r\n              availability=\"Away on vacation\"\r\n            />\r\n            <ProtectedLogin\r\n              path=\"/\"\r\n              component={Login}\r\n              authenticate={authenticate}\r\n              setAuthenticate={setAuthenticate}\r\n              accountType={accountType}\r\n              setAccountType={setAccountType}\r\n              setUserToken={setUserToken}\r\n            />\r\n          </Switch>\r\n        ) : (\r\n          <div className={classes.root}>\r\n            <MuiThemeProvider theme={themes}>\r\n              <CircularProgress\r\n                style={{ position: \"fixed\", top: \"30%\", left: \"50%\" }}\r\n                size={200}\r\n              />\r\n            </MuiThemeProvider>\r\n          </div>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n//import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import \"./Components/firebase/firebase.js\";\r\n// import NursePage from \"./Components/Nurse/NursePage.js\";\r\n\r\nReactDOM.render(\r\n  // <NursePage />,\r\n  <React.StrictMode>\r\n    <Router basename=\"/medmemo\">\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}